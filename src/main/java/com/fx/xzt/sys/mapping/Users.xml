<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fx.xzt.sys.mapper.UsersMapper">
    <resultMap id="BaseResultMap" type="com.fx.xzt.sys.entity.Users">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <!--<result column="sex" property="sex" jdbcType="VARCHAR" />-->
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="pid" property="pid" jdbcType="BIGINT"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_name, password, email, phone, status, create_time, update_time,pid
  </sql>
    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from users
    </select>
    <select id="selectByPhone" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from users
        where user_name = #{phone,jdbcType=VARCHAR}
    </select>
    <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from users
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectByUsersModel" resultType="com.fx.xzt.sys.model.UsersModel" parameterType="java.util.Map">
        select u.id,u.phone,u.create_time as createTime,GROUP_CONCAT(r.name) as rname,GROUP_CONCAT(r.id) as rid,u.user_name as userName
        from users u
        left join users_user_role ur on u.id = ur.uid
        left join users_role r on r.id = ur.rid
        <where>
                u.status = 1
            <if test="phone != null and phone !='' ">
                and u.user_name = #{phone,jdbcType=VARCHAR}
            </if>
            <if test="startTime !=null and startTime !='' ">
                and u.create_time &gt;=#{startTime,jdbcType=TIMESTAMP}
            </if>
            <if test="endTime !=null and endTime !='' ">
                and u.create_time &lt;=#{endTime,jdbcType=TIMESTAMP}
            </if>
        </where>
        GROUP BY u.id,u.phone,u.password,u.create_time
        order by u.create_time desc
    </select>
    <select id="getUserInfoNyName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from users
        where user_name = #{user_name,jdbcType=BIGINT}
    </select>
    <select id="getUserInfo" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from users
        where user_name = #{username,jdbcType=BIGINT} and password=#{password,jdbcType=VARCHAR}
    </select>
    <select id="getUserInfoNyPhone" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from users
        where user_name = #{phone,jdbcType=VARCHAR} and password=#{password,jdbcType=VARCHAR}
    </select>
    <insert id="insertUsers" parameterType="com.fx.xzt.sys.entity.Users" useGeneratedKeys="true" keyProperty="id">
        insert into users
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <!-- <if test="sex != null" >
               sex,
             </if>-->
            <if test="status != null">
                status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="pid != null">
                pid,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <!-- <if test="sex != null" >
               #{sex,jdbcType=VARCHAR},
             </if>-->
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="pid != null">
                #{pid,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <update id="updateByIdSelective" parameterType="com.fx.xzt.sys.entity.Users">
        update users
        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null and password != ''">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <!-- <if test="sex != null" >
               sex = #{sex,jdbcType=VARCHAR},
             </if>-->
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPIdSelective" parameterType="com.fx.xzt.sys.entity.Users">
        update users
        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null and password != ''">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <!-- <if test="sex != null" >
               sex = #{sex,jdbcType=VARCHAR},
             </if>-->
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where pid = #{pid,jdbcType=BIGINT}
    </update>
    <delete id="deleteById" parameterType="java.lang.Long">
    delete from users
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <!--根据代理商id删除经纪人 tianliya-->
    <delete id="deleteByPid" parameterType="java.lang.Long">
        delete from users
        where pid = #{pid,jdbcType=BIGINT}
    </delete>
    <!--根据代理商id删除经纪人 tianliya-->
    <!--获取代理商列表开始-->
    <select id="selectByAgentMessage" resultType="java.util.Map">
      SELECT CAST(id as CHAR) id,user_name agentName FROM users WHERE STATUS=1 AND pid=1 ORDER  by create_time desc
    </select>
    <!--获取代理商列表结束-->
    <!--获取经纪人列表开始-->
    <select id="selectByBrokerMessage" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT CAST(id as CHAR) id,user_name brokerName,CAST(pid as CHAR) pid,phone,create_time createTime FROM users
        <where>
            <if test="pid != null and pid!='' ">
                and pid = #{pid,jdbcType=BIGINT}
            </if>
            <if test="startTime != null and startTime!='' ">
                and create_time &gt; = #{startTime,jdbcType=TIMESTAMP}
            </if>
            <if test="endTime != null and endTime!='' ">
                and create_time &lt; = #{endTime,jdbcType=TIMESTAMP}
            </if>
        </where>
        ORDER  by create_time desc
    </select>
    <!--获取经纪人列表结束-->

    <!--获取当前用户 tianliya start-->
    <select id="getOneByUserId" resultType="java.util.Map" parameterType="java.lang.Long">
        SELECT id,user_name brokerName,pid,phone,create_time createTime FROM users
        WHERE id = #{userId,jdbcType=BIGINT}
        ORDER  by create_time desc
    </select>
    <!--获取当前用户 tianliya end结束-->

	<!--获取渠道商列表开始-->
    <select id="selectByChannelMessage" resultType="java.util.Map">
      SELECT id,user_name channelName FROM users WHERE STATUS=1 AND pid=-1 ORDER  by create_time desc
    </select>
    <!--获取渠道商列表结束-->

    <!--根据代理商名字，经纪人名字、创建时间、类型查询 tianliya start-->
        <select id="getByAgentNameAndType" resultType="java.util.Map" parameterType="java.util.Map">
            select u1.id id , u1.user_name userName,u1.pid, u1.phone phone,u1.create_time createTime,if(u2.pid is not null,u2.user_name,null) as agentName,isc.real_gold_percent*100 goldSharing,isc.random_percent*100 financeSharing,
            isc.gold_right_percent*100 goldRightSharing,isc.gold_percent*100 goldUpSharing
            from users u1
            left join users u2
            on u1.pid=u2.id
            left join income_sharing_conf isc
            on isc.agent_id=u1.id
            <where>
                u1.status = 1
                and u1.pid is not null
                <if test="pid != null and pid != ''">
                    and u2.id=#{pid,jdbcType=BIGINT}
                </if>
                <if test="id != null and id != ''">
                    and u1.id=#{id,jdbcType=BIGINT}
                </if>
                <if test="startTime != null and startTime != ''">
                    and u1.create_time &gt;= #{startTime,jdbcType=TIMESTAMP}
                </if>
                <if test="endTime != null and endTime != ''">
                    and u1.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
                </if>
            </where>
            order by u1.pid asc ,u1.create_time desc
        </select>
    <!--根据代理商名字，经纪人名字、创建时间、类型查询 tianliya end-->
    <!--商户管理运营商视角 tianliya-->
    <select id="getSightOfOperator" resultType="java.util.Map" parameterType="java.util.Map">
        select u1.id id , u1.user_name userName,u1.pid, u1.phone phone,u1.create_time createTime,if(u2.pid is not null,u2.user_name,null) as agentName
        from users u1
        left join users u2
        on u1.pid=u2.id

        <where>
            u1.status = 1
            <if test="pid != null and pid != ''">
                and u1.pid=#{pid,jdbcType=BIGINT}
            </if>
            <if test="startTime != null and startTime != ''">
                and u1.create_time &gt;= #{startTime,jdbcType=TIMESTAMP}
            </if>
            <if test="endTime != null and endTime != ''">
                and u1.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
            </if>
        </where>
        order by u1.pid asc ,u1.create_time desc
    </select>
    <!--商户管理运营商视角 tianliya-->


</mapper>
