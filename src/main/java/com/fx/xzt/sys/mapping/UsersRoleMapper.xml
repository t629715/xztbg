<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fx.xzt.sys.mapper.UsersRoleMapper" >
  <resultMap id="BaseResultMap" type="com.fx.xzt.sys.entity.UsersRole" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <resultMap id="ResultMap" type="com.fx.xzt.sys.model.UsersRoleModel" >
    <id column="id" property="infoId" jdbcType="INTEGER" />
    <result column="name" property="roleName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <collection property="usersList" ofType="com.fx.xzt.sys.entity.Users">
      <result column="user_name" property="userName" jdbcType="VARCHAR"/>
    </collection>
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, create_time, isView
  </sql>
  <select id="getByAll" resultMap="BaseResultMap" parameterType="com.fx.xzt.sys.entity.UsersRole" >
  	select 
    <include refid="Base_Column_List" />
    from users_role
    <where>
    	<if test="id != null">
    		id = #{id,jdbcType=INTEGER}
    	</if>
    </where>
  </select>
  <insert id="insertRole" parameterType="com.fx.xzt.sys.entity.UsersRole" useGeneratedKeys="true" keyProperty="id">
    insert into users_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="isView != null" >
        isView,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isView != null" >
        #{isView,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>


   <update id="updateByIdSelective" parameterType="com.fx.xzt.sys.entity.UsersRole" >
    update users_role
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="isView != null" >
        isView = #{isView,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>


  <delete id="deleteById" parameterType="java.lang.Integer" >
    delete from users_role
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <!--tianliya-->
  <select id="getRoles" resultType="java.util.Map" parameterType="java.util.Map">
    select ur.id, ur.`name` rname, ur.create_time  rCreateTime, ur.isView isView, group_concat(us.user_name) userNames
    from users_role ur
    left join users_user_role uur
    on ur.id = uur.rid
    left join users us
    on  uur.uid = us.id

    <where>
      <if test="userName != null and userName != ''">
        and ur.name = #{userName,jdbcType=VARCHAR}
      </if>
      <if test="startTime != null and startTime != ''">
        and ur.create_time &gt;= #{startTime,jdbcType=TIMESTAMP}
      </if>
      <if test="endTime != null and endTime != ''">
        and ur.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
      </if>
    </where>
    group by ur.name
    order by ur.id
  </select>
  
  <!-- 根据id获取角色信息-开始 -->
  <select id="getById" resultType="java.util.Map" parameterType="java.lang.String">
    select id, name, isView from users_role
    <where>
      <if test="id != null and id != ''">
        and id = #{id,jdbcType=INTEGER}
      </if>
    </where>
  </select>
  <!-- 根据id获取角色信息-结束 -->

<!--   <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.fx.xzt.sys.entity.UsersRoleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from users_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from users_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fx.xzt.sys.entity.UsersRoleExample" >
    delete from users_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fx.xzt.sys.entity.UsersRole" >
    insert into users_role (id, name, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <select id="countByExample" parameterType="com.fx.xzt.sys.entity.UsersRoleExample" resultType="java.lang.Integer" >
    select count(*) from users_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update users_role
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update users_role
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fx.xzt.sys.entity.UsersRole" >
    update users_role
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fx.xzt.sys.entity.UsersRole" >
    update users_role
    set name = #{name,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update> -->
</mapper>