<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fx.xzt.sys.mapper.UserInfoMapper">
	<resultMap id="BaseResultMap" type="com.fx.xzt.sys.entity.UserInfo">
		<id column="UserID" property="userid" jdbcType="BIGINT" />
		<result column="NickName" property="nickname" jdbcType="VARCHAR" />
		<result column="ProfilePhotoPath" property="profilephotopath"
			jdbcType="VARCHAR" />
		<result column="RegisterTime" property="registertime" jdbcType="TIMESTAMP" />
		<result column="RegisterFrom" property="registerfrom" jdbcType="VARCHAR" />
		<result column="PhoneNo" property="phoneno" jdbcType="VARCHAR" />
		<result column="DeliveryAddress" property="deliveryaddress"
			jdbcType="VARCHAR" />
		<result column="RealName" property="realname" jdbcType="VARCHAR" />
		<result column="IDCard" property="idcard" jdbcType="VARCHAR" />
		<result column="IDCardPath" property="idcardpath" jdbcType="VARCHAR" />
		<result column="IDCardBackPath" property="idcardbackpath"
			jdbcType="VARCHAR" />
		<result column="RealNameAuthApplyTime" property="realnameauthapplytime"
			jdbcType="TIMESTAMP" />
		<result column="RealNameAuthApproveTime" property="realnameauthapprovetime"
			jdbcType="TIMESTAMP" />
		<result column="RealNameAuthApproveState" property="realnameauthapprovestate"
			jdbcType="SMALLINT" />
		<result column="RealNameAuthStatus" property="realnameauthstatus"
			jdbcType="SMALLINT" />
		<result column="agent_id" property="agentId" jdbcType="BIGINT" />
		<result column="broker_id" property="brokerId" jdbcType="BIGINT" />
		<result column="RegisterIp" property="registerIp" jdbcType="VARCHAR" />
		<result column="Attribution" property="attribution" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		UserID, NickName, ProfilePhotoPath, RegisterTime, RegisterFrom, PhoneNo,
		DeliveryAddress,
		RealName, IDCard, IDCardPath, RealNameAuthApplyTime, RealNameAuthApproveTime,
		RealNameAuthApproveState,
		RealNameAuthStatus, agent_id, broker_id, RegisterIp, Attribution
	</sql>
	
	<!-- 根据id获取用户信息开始-htt -->
	<select id="selectUserInfoById" parameterType="java.lang.Long" resultType="java.util.Map">
		select UserID,agent_id agentId,broker_id brokerId, channel_id channelId from User_Info where UserID = #{userID,jdbcType=BIGINT}
	</select>
	<!-- 根据id获取用户信息结束-htt -->
	
	<!--实名认证查询开始-htt -->
	<select id="getByRealNameAuth" resultType="java.util.Map"
		parameterType="java.util.Map">
		SELECT l.userName ,cast(u.UserID as CHAR) UserID , RealName, IDCard,
		IDCardPath,IDCardBackPath, RealNameAuthApplyTime,
		RealNameAuthApproveTime, RealNameAuthApproveState,RealNameAuthStatus
		FROM User_Info u
		INNER JOIN User_Login l ON u.UserID = l.UserID
		<where>
			and l.Status = 1
			and u.RealNameAuthApproveState = 0
			<if test="userName != null and userName!='' ">
				and l.UserName = #{userName,jdbcType=VARCHAR}
			</if>
			<if test="realName != null and realName!='' ">
				and RealName = #{realName,jdbcType=VARCHAR}
			</if>
			<if test="applyTimeStart !=null and applyTimeStart !='' ">
				and RealNameAuthApplyTime &gt;=#{applyTimeStart,jdbcType=TIMESTAMP}
			</if>
			<if test="applyTimeEnd !=null and applyTimeEnd != '' ">
				and RealNameAuthApplyTime &lt;#{applyTimeEnd,jdbcType=TIMESTAMP}
			</if>
		</where>
		order by RealNameAuthApplyTime desc
	</select>
	<!--实名认证查询结束 -->
	<!--实名认证查询已审核开始-htt -->
	<select id="getByRealNameAuthApprove" resultType="java.util.Map"
		parameterType="java.util.Map">
		SELECT l.userName ,cast(u.UserID as CHAR) UserID , RealName, IDCard,
		IDCardPath,IDCardBackPath, RealNameAuthApplyTime,
		RealNameAuthApproveTime, RealNameAuthApproveState,RealNameAuthStatus
		FROM User_Info u
		INNER JOIN User_Login l ON u.UserID = l.UserID
		<where>
			and l.Status = 1
			and u.RealNameAuthApproveState != 0
			<if test="userName != null and userName!='' ">
				and l.UserName = #{userName,jdbcType=VARCHAR}
			</if>
			<if test="realName != null and realName!='' ">
				and RealName = #{realName,jdbcType=VARCHAR}
			</if>
			<if test="state != null and state !='' ">
				and RealNameAuthApproveState = #{state,jdbcType=SMALLINT}
			</if>
			<if test="applyTimeStart !=null and applyTimeStart !='' ">
				and RealNameAuthApplyTime &gt;=#{applyTimeStart,jdbcType=TIMESTAMP}
			</if>
			<if test="applyTimeEnd !=null and applyTimeEnd != '' ">
				and RealNameAuthApplyTime &lt;#{applyTimeEnd,jdbcType=TIMESTAMP}
			</if>
		</where>
		order by RealNameAuthApplyTime desc
	</select>
	<!--实名认证已审核查询结束 -->
	<!--账户信息查询 -->
	<select id="getByAccountMessage" resultType="java.util.Map"
		parameterType="java.util.Map">
		SELECT CAST(u.UserID AS  CHAR ) AS userId,l.UserName AS userName,l.Status AS
		STATUS,u.RealName,u.RegisterTime registerTime,
		u.agent_id AS agentId, ua.user_name AS agentName, u.broker_id AS brokerId,
		u1.user_name AS brokerName ,
		u.IDCard AS idcard,b.BankName AS bankName,ub.AccountNum AS accountNum,
		a.rmb AS rmb,a.finance AS finance,frozen_rmb AS frozenRmb,total_income AS
		totalIncome,
		g.gold as gold
		<!--, a.frozen_gold as frozenGold -->
		FROM User_Info u
		RIGHT JOIN User_Login l ON u.UserID = l.UserID
		LEFT JOIN users ua ON u.agent_id = ua.id
		LEFT JOIN users u1 ON u.broker_id = u1.id
		LEFT JOIN (SELECT * FROM User_BankCard WHERE State=1) ub ON u.UserID =
		ub.UserID
		LEFT JOIN Bank b ON ub.BankNo = b.BankNo
		LEFT JOIN user_account a ON a.user_id = l.UserID
		left join user_gold_account g on g.user_id = l.UserID
		<where>
			<!-- and l.Status = 1  -->
			<if test="userName != null and userName != '' ">
				and l.UserName = #{userName,jdbcType=VARCHAR}
			</if>
			<if test="agentsName != null and agentsName !='' ">
				and ua.id = #{agentsName,jdbcType=BIGINT}
			</if>
			<if test="brokerName != null and brokerName !='' ">
				and u1.id = #{brokerName,jdbcType=BIGINT}
			</if>
			<if test="startTime !=null and startTime !='' ">
				and u.RegisterTime &gt;=#{startTime,jdbcType=TIMESTAMP}
			</if>
			<if test="endTime !=null and endTime != '' ">
				and u.RegisterTime &lt;#{endTime,jdbcType=TIMESTAMP}
			</if>
		</where>
		order by RegisterTime DESC
	</select>
	<!--账户信息查询结束 -->
	<!--账户信息查询金额统计开始 -htt -->
	<select id="getByAccountCount" resultType="java.util.Map"
		parameterType="java.util.Map">
		SELECT SUM(rmb) rmbSum, SUM(finance) finaceSum, SUM(frozen_rmb)
		frozenRmbSum,
		SUM(total_income) AS totalIncomeSum, SUM(gold) goldSum
		FROM User_Info u
		RIGHT JOIN User_Login l ON u.UserID = l.UserID
		LEFT JOIN user_account a ON l.UserID = a.user_id
		LEFT JOIN user_gold_account ga ON ga.user_id = l.UserID
		LEFT JOIN users ua ON u.agent_id = ua.id
		LEFT JOIN users ub ON u.broker_id = ub.id
		<where>
			<!-- and l.Status = 1 -->
			<if test="userName != null and userName != '' ">
				and l.UserName = #{userName,jdbcType=VARCHAR}
			</if>
			<if test="agentsName != null and agentsName !='' ">
				and ua.id = #{agentsName,jdbcType=BIGINT}
			</if>
			<if test="brokerName != null and brokerName !='' ">
				and ub.id = #{brokerName,jdbcType=BIGINT}
			</if>
			<if test="startTime !=null and startTime !='' ">
				and u.RegisterTime &gt;=#{startTime,jdbcType=TIMESTAMP}
			</if>
			<if test="endTime !=null and endTime != '' ">
				and u.RegisterTime &lt;#{endTime,jdbcType=TIMESTAMP}
			</if>
		</where>
	</select>
	<!--账户信息查询金额统计结束 -->
	
	<!-- 用户分析查询统计开始-htt -->
	<select id="getByUserAnalysisCount" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT t1.hjrj, t1.xrj, t1.xrj/t1.hjrj xrjbl, t1.hjjy, t1.xjy, t1.xjy/t1.hjjy xjybl, t1.xzc,
			(SELECT COUNT(DISTINCT r3.UserID) FROM User_Recharge r3) zrj,
			(SELECT COUNT(i1.UserID) FROM User_Info i1) zyh from (
			SELECT SUM(t.hjrj) hjrj, SUM(t.xrj) xrj,
				SUM(t.hjjqjy) + SUM(t.hjhjwz) + SUM(t.hjsyc) + SUM(t.hjswhj) hjjy, 
				SUM(t.xjqjy) + SUM(xhjwz) + SUM(t.xsyc) + SUM(t.xswhj) xjy,
				SUM(t.xzc) xzc FROM (
				SELECT d.date,	
					(SELECT COUNT(DISTINCT r.UserID) FROM User_Recharge r 
						LEFT JOIN User_Info u ON u.UserID = u.UserID WHERE DATE_FORMAT(r.RechargeTime,'%Y-%m-%d') = d.date 
						<if test="agentName != null and agentName !='' ">
							and u.agent_id = #{agentName,jdbcType=BIGINT}
						</if>
						<if test="registerFrom != null and registerFrom !='' ">
							and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
						</if>
					) hjrj,
					(SELECT COUNT(r2.UserID) FROM (SELECT r1.UserID,MIN(DATE_FORMAT(r1.RechargeTime,'%Y-%m-%d')) minDate FROM User_Recharge r1
						LEFT JOIN User_Info u ON u.UserID = r1.UserID where 1=1 
						<if test="agentName != null and agentName !='' ">
							and u.agent_id = #{agentName,jdbcType=BIGINT}
						</if>
						<if test="registerFrom != null and registerFrom !='' ">
							and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
						</if>
						GROUP BY r1.UserID) r2 WHERE r2.minDate = d.date) xrj,
					(SELECT COUNT(DISTINCT o.user_id) FROM deal_order o 
						LEFT JOIN User_Info u ON u.UserID = o.user_id WHERE DATE_FORMAT(o.create_time,'%Y-%m-%d') = d.date
						<if test="agentName != null and agentName !='' ">
							and u.agent_id = #{agentName,jdbcType=BIGINT}
						</if>
						<if test="registerFrom != null and registerFrom !='' ">
							and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
						</if>
					) hjjqjy,
					(SELECT COUNT(d1.user_id) FROM (SELECT o1.user_id,MIN(DATE_FORMAT(o1.create_time,'%Y-%m-%d')) minDate FROM deal_order o1 
						LEFT JOIN User_Info u ON u.UserID = o1.user_id where 1=1 
						<if test="agentName != null and agentName !='' ">
							and u.agent_id = #{agentName,jdbcType=BIGINT}
						</if>
						<if test="registerFrom != null and registerFrom !='' ">
							and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
						</if>
						GROUP BY o1.user_id) d1 WHERE d1.minDate = d.date) xjqjy,
					(SELECT COUNT(DISTINCT f.user_id) FROM finance_order f 
						LEFT JOIN User_Info u ON u.UserID = f.user_id WHERE f.type = 2 AND DATE_FORMAT(f.buy_time,'%Y-%m-%d') = d.date
						<if test="agentName != null and agentName !='' ">
							and u.agent_id = #{agentName,jdbcType=BIGINT}
						</if>
						<if test="registerFrom != null and registerFrom !='' ">
							and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
						</if>
					) hjhjwz,
					(SELECT COUNT(e.user_id) FROM (SELECT f1.user_id,MIN(DATE_FORMAT(f1.buy_time,'%Y-%m-%d')) minDate FROM finance_order f1 
						LEFT JOIN User_Info u ON u.UserID = f1.user_id WHERE f1.type = 2 
						<if test="agentName != null and agentName !='' ">
							and u.agent_id = #{agentName,jdbcType=BIGINT}
						</if>
						<if test="registerFrom != null and registerFrom !='' ">
							and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
						</if>
						GROUP BY f1.user_id) e WHERE e.minDate = d.date) xhjwz,
					(SELECT COUNT(DISTINCT f2.user_id) FROM finance_order f2 
						LEFT JOIN User_Info u ON u.UserID = f2.user_id WHERE f2.type = 1 AND DATE_FORMAT(f2.buy_time,'%Y-%m-%d') = d.date
						<if test="agentName != null and agentName !='' ">
							and u.agent_id = #{agentName,jdbcType=BIGINT}
						</if>
						<if test="registerFrom != null and registerFrom !='' ">
							and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
						</if>	
					) hjsyc,
					(SELECT COUNT(g.user_id) FROM (SELECT f3.user_id,MIN(DATE_FORMAT(f3.buy_time,'%Y-%m-%d')) minDate FROM finance_order f3 
						LEFT JOIN User_Info u ON u.UserID = f3.user_id WHERE f3.type = 1 
						<if test="agentName != null and agentName !='' ">
							and u.agent_id = #{agentName,jdbcType=BIGINT}
						</if>
						<if test="registerFrom != null and registerFrom !='' ">
							and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
						</if>
						GROUP BY f3.user_id) g WHERE g.minDate = d.date) xsyc,
					(SELECT COUNT(DISTINCT rgo.user_id) FROM real_gold_order rgo 
						LEFT JOIN User_Info u ON u.UserID = rgo.user_id WHERE DATE_FORMAT(rgo.buy_time,'%Y-%m-%d') = d.date
						<if test="agentName != null and agentName !='' ">
							and u.agent_id = #{agentName,jdbcType=BIGINT}
						</if>
						<if test="registerFrom != null and registerFrom !='' ">
							and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
						</if>
					) hjswhj,
					(SELECT COUNT(rgo1.user_id) FROM (SELECT r.user_id,MIN(DATE_FORMAT(r.buy_time,'%Y-%m-%d')) minDate FROM real_gold_order r 
						LEFT JOIN User_Info u ON u.UserID = r.user_id 
						where 1=1 
						<if test="agentName != null and agentName !='' ">
							and u.agent_id = #{agentName,jdbcType=BIGINT}
						</if>
						<if test="registerFrom != null and registerFrom !='' ">
							and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
						</if>
						GROUP BY r.user_id) rgo1 WHERE rgo1.minDate = d.date) xswhj,
					(SELECT COUNT(i.UserID) FROM User_Info i 
						LEFT JOIN User_Info u ON u.UserID = i.UserID WHERE DATE_FORMAT(i.RegisterTime,'%Y-%m-%d') = d.date 
						<if test="agentName != null and agentName !='' ">
							and u.agent_id = #{agentName,jdbcType=BIGINT} 
						</if>
						<if test="registerFrom != null and registerFrom !='' ">
							and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT} 
						</if>
					) xzc
				FROM until_date d where 1=1 
				<if test="startTime !=null and startTime !='' ">
					and d.date &gt;=#{startTime,jdbcType=TIMESTAMP}
				</if>
				<if test="endTime !=null and endTime != '' ">
					and d.date &lt;#{endTime,jdbcType=TIMESTAMP}
				</if>
		) t ) t1
	</select>
	<!-- 用户分析查询统计结束-htt -->
	
	<!-- 用户分析查询开始-htt -->
	<select id="getByUserAnalysis" resultType="java.util.Map" parameterType="java.util.Map">
	SELECT t.date, t.hjrj, t.xrj, t.xrj/t.hjrj xrjbl, t.hjjqjy, t.xjqjy, t.xjqjy/t.hjjqjy xjqjybl, t.hjhjwz, t.xhjwz, t.xhjwz/t.hjhjwz xhjwzbl, 
		t.hjsyc, t.xsyc, t.xsyc/t.hjsyc xsycbl, t.hjswhj, t.xswhj, t.xswhj/t.hjswhj xswhjbl, t.xzc, t.zzc, t.zrj FROM (
		SELECT d.date,	
			(SELECT COUNT(DISTINCT r.UserID) FROM User_Recharge r 
				LEFT JOIN User_Info u ON u.UserID = u.UserID WHERE DATE_FORMAT(r.RechargeTime,'%Y-%m-%d') = d.date 
				<if test="agentName != null and agentName !='' ">
					and u.agent_id = #{agentName,jdbcType=BIGINT}
				</if>
				<if test="registerFrom != null and registerFrom !='' ">
					and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
				</if>
			) hjrj,
			(SELECT COUNT(r2.UserID) FROM (SELECT r1.UserID,MIN(DATE_FORMAT(r1.RechargeTime,'%Y-%m-%d')) minDate FROM User_Recharge r1
				LEFT JOIN User_Info u ON u.UserID = r1.UserID where 1=1 
				<if test="agentName != null and agentName !='' ">
					and u.agent_id = #{agentName,jdbcType=BIGINT}
				</if>
				<if test="registerFrom != null and registerFrom !='' ">
					and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
				</if>
				GROUP BY r1.UserID) r2 WHERE r2.minDate = d.date) xrj,
			(SELECT COUNT(DISTINCT o.user_id) FROM deal_order o 
				LEFT JOIN User_Info u ON u.UserID = o.user_id WHERE DATE_FORMAT(o.create_time,'%Y-%m-%d') = d.date
				<if test="agentName != null and agentName !='' ">
					and u.agent_id = #{agentName,jdbcType=BIGINT}
				</if>
				<if test="registerFrom != null and registerFrom !='' ">
					and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
				</if>
			) hjjqjy,
			(SELECT COUNT(d1.user_id) FROM (SELECT o1.user_id,MIN(DATE_FORMAT(o1.create_time,'%Y-%m-%d')) minDate FROM deal_order o1 
				LEFT JOIN User_Info u ON u.UserID = o1.user_id where 1=1 
				<if test="agentName != null and agentName !='' ">
					and u.agent_id = #{agentName,jdbcType=BIGINT}
				</if>
				<if test="registerFrom != null and registerFrom !='' ">
					and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
				</if>
				GROUP BY o1.user_id) d1 WHERE d1.minDate = d.date) xjqjy,
			(SELECT COUNT(DISTINCT f.user_id) FROM finance_order f 
				LEFT JOIN User_Info u ON u.UserID = f.user_id WHERE f.type = 2 AND DATE_FORMAT(f.buy_time,'%Y-%m-%d') = d.date
				<if test="agentName != null and agentName !='' ">
					and u.agent_id = #{agentName,jdbcType=BIGINT}
				</if>
				<if test="registerFrom != null and registerFrom !='' ">
					and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
				</if>
			) hjhjwz,
			(SELECT COUNT(e.user_id) FROM (SELECT f1.user_id,MIN(DATE_FORMAT(f1.buy_time,'%Y-%m-%d')) minDate FROM finance_order f1 
				LEFT JOIN User_Info u ON u.UserID = f1.user_id WHERE f1.type = 2 
				<if test="agentName != null and agentName !='' ">
					and u.agent_id = #{agentName,jdbcType=BIGINT}
				</if>
				<if test="registerFrom != null and registerFrom !='' ">
					and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
				</if>
				GROUP BY f1.user_id) e WHERE e.minDate = d.date) xhjwz,
			(SELECT COUNT(DISTINCT f2.user_id) FROM finance_order f2 
				LEFT JOIN User_Info u ON u.UserID = f2.user_id WHERE f2.type = 1 AND DATE_FORMAT(f2.buy_time,'%Y-%m-%d') = d.date
				<if test="agentName != null and agentName !='' ">
					and u.agent_id = #{agentName,jdbcType=BIGINT}
				</if>
				<if test="registerFrom != null and registerFrom !='' ">
					and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
				</if>	
			) hjsyc,
			(SELECT COUNT(g.user_id) FROM (SELECT f3.user_id,MIN(DATE_FORMAT(f3.buy_time,'%Y-%m-%d')) minDate FROM finance_order f3 
				LEFT JOIN User_Info u ON u.UserID = f3.user_id WHERE f3.type = 1 
				<if test="agentName != null and agentName !='' ">
					and u.agent_id = #{agentName,jdbcType=BIGINT}
				</if>
				<if test="registerFrom != null and registerFrom !='' ">
					and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
				</if>
				GROUP BY f3.user_id) g WHERE g.minDate = d.date) xsyc,
			(SELECT COUNT(DISTINCT rgo.user_id) FROM real_gold_order rgo 
				LEFT JOIN User_Info u ON u.UserID = rgo.user_id WHERE DATE_FORMAT(rgo.buy_time,'%Y-%m-%d') = d.date
				<if test="agentName != null and agentName !='' ">
					and u.agent_id = #{agentName,jdbcType=BIGINT}
				</if>
				<if test="registerFrom != null and registerFrom !='' ">
					and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
				</if>
			) hjswhj,
			(SELECT COUNT(rgo1.user_id) FROM (SELECT r.user_id,MIN(DATE_FORMAT(r.buy_time,'%Y-%m-%d')) minDate FROM real_gold_order r 
				LEFT JOIN User_Info u ON u.UserID = r.user_id 
				where 1=1 
				<if test="agentName != null and agentName !='' ">
					and u.agent_id = #{agentName,jdbcType=BIGINT}
				</if>
				<if test="registerFrom != null and registerFrom !='' ">
					and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
				</if>
				GROUP BY r.user_id) rgo1 WHERE rgo1.minDate = d.date) xswhj,
			(SELECT COUNT(i.UserID) FROM User_Info i 
				LEFT JOIN User_Info u ON u.UserID = i.UserID WHERE DATE_FORMAT(i.RegisterTime,'%Y-%m-%d') = d.date 
				<if test="agentName != null and agentName !='' ">
					and u.agent_id = #{agentName,jdbcType=BIGINT} 
				</if>
				<if test="registerFrom != null and registerFrom !='' ">
					and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT} 
				</if>
			) xzc,
			(SELECT COUNT(i1.UserID) FROM User_Info i1 
				LEFT JOIN User_Info u ON u.UserID = i1.UserID WHERE DATE_FORMAT(i1.RegisterTime,'%Y-%m-%d') &lt;= d.date 
				<if test="agentName != null and agentName !='' ">
					and u.agent_id = #{agentName,jdbcType=BIGINT}
				</if>
				<if test="registerFrom != null and registerFrom !='' ">
					and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
				</if>
			) zzc,
			(SELECT COUNT(DISTINCT r3.UserID) FROM User_Recharge r3 
				LEFT JOIN User_Info u ON u.UserID = r3.UserID WHERE DATE_FORMAT(r3.RechargeTime,'%Y-%m-%d') &lt;= d.date
				<if test="agentName != null and agentName !='' ">
					and u.agent_id = #{agentName,jdbcType=BIGINT}
				</if>
				<if test="registerFrom != null and registerFrom !='' ">
					and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
				</if>
			) zrj
		FROM until_date d where 1=1 
		<if test="startTime !=null and startTime !='' ">
			and d.date &gt;=#{startTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endTime !=null and endTime != '' ">
			and d.date &lt;#{endTime,jdbcType=TIMESTAMP}
		</if>
		GROUP BY d.date ) t
		ORDER BY t.date DESC
	</select>
	<!-- 用户分析查询统计-htt -->
	
	<!-- 用户属性查询开始-htt -->
	<select id="getByUserAttribute" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT a.date, 
			IFNULL((SELECT COUNT(DISTINCT l.UserID) FROM User_LoginInfo l LEFT JOIN User_Info i ON l.UserID = i.UserID
			LEFT JOIN users u ON i.agent_id = u.id WHERE DATE_FORMAT(l.LoginTime,'%Y-%m-%d') = a.date 
			<if test="agentName != null and agentName !=''">
				and i.agent_id = #{agentName,jdbcType=VARCHAR} 
			</if>
			), 0) dlNum,
			IFNULL((SELECT COUNT(i.UserID) FROM User_Info i WHERE DATE_FORMAT(i.RegisterTime,'%Y-%m-%d') &lt;= a.date 
			<if test="agentName != null and agentName !=''">
				and i.agent_id = #{agentName,jdbcType=VARCHAR} 
			</if>
			), 0) zNum,
			SUM(a.nvNum) nvNum,SUM(a.nNum) nNum,SUM(a.wzNum) wzNum,SUM(a.pgNum) pgNum,SUM(a.azNum) azNum,SUM(a.qtNum) qtNum 
			FROM 
				(SELECT DATE_FORMAT(l.LoginTime,'%Y-%m-%d') DATE,
				IFNULL((SELECT COUNT(DISTINCT l.UserID) FROM DUAL WHERE i.sex = 2), 0) nvNum,
				IFNULL((SELECT COUNT(DISTINCT l.UserID) FROM DUAL WHERE i.sex = 1), 0) nNum,
				IFNULL((SELECT COUNT(DISTINCT l.UserID) FROM DUAL WHERE i.sex = 0), 0) wzNum,
				IFNULL((SELECT COUNT(DISTINCT l.UserID) FROM DUAL WHERE l.LoginFrom = 'iOS'), 0) pgNum,
				IFNULL((SELECT COUNT(DISTINCT l.UserID) FROM DUAL WHERE l.LoginFrom = 'Android'), 0) azNum,
				IFNULL((SELECT COUNT(DISTINCT l.UserID) FROM DUAL WHERE l.LoginFrom != 'Android' AND l.LoginFrom != 'iOS'), 0) qtNum 
				FROM User_LoginInfo l 
				LEFT JOIN User_Info i ON l.UserID = i.UserID
				where 1=1
				<if test="startTime !=null and startTime !='' ">
					and DATE_FORMAT(l.LoginTime,'%Y-%m-%d') &gt;=#{startTime,jdbcType=TIMESTAMP}
				</if>
				<if test="endTime !=null and endTime != '' ">
					and DATE_FORMAT(l.LoginTime,'%Y-%m-%d') &lt;#{endTime,jdbcType=TIMESTAMP}
				</if>
				<if test="agentName != null and agentName !=''">
					and i.agent_id = #{agentName,jdbcType=VARCHAR} 
				</if>
				GROUP BY DATE_FORMAT(l.LoginTime,'%Y-%m-%d'),l.UserID,l.LoginFrom) a
		GROUP BY a.date
		ORDER BY a.date DESC
	
	</select>
	<!-- 用户属性查询结束-htt -->
	
	<!-- 用户属性查询统计开始-htt -->
	<select id="getByUserAttributeCount" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT IFNULL((SELECT COUNT(DISTINCT l.UserID) FROM User_LoginInfo l), 0) dlNum,
			IFNULL((SELECT COUNT(i.UserID) FROM User_Info i), 0) zNum,
			SUM(a.nvNum) nvNum,SUM(a.nNum) nNum,SUM(a.wzNum) wzNum,SUM(a.pgNum) pgNum,SUM(a.azNum) azNum,SUM(a.qtNum) qtNum 
			FROM 
				(SELECT DATE_FORMAT(l.LoginTime,'%Y-%m-%d') DATE,
				IFNULL((SELECT COUNT(DISTINCT l.UserID) FROM DUAL WHERE i.sex = 2), 0) nvNum,
				IFNULL((SELECT COUNT(DISTINCT l.UserID) FROM DUAL WHERE i.sex = 1), 0) nNum,
				IFNULL((SELECT COUNT(DISTINCT l.UserID) FROM DUAL WHERE i.sex = 0), 0) wzNum,
				IFNULL((SELECT COUNT(DISTINCT l.UserID) FROM DUAL WHERE l.LoginFrom = 'iOS'), 0) pgNum,
				IFNULL((SELECT COUNT(DISTINCT l.UserID) FROM DUAL WHERE l.LoginFrom = 'Android'), 0) azNum,
				IFNULL((SELECT COUNT(DISTINCT l.UserID) FROM DUAL WHERE l.LoginFrom != 'Android' AND l.LoginFrom != 'iOS'), 0) qtNum 
				FROM User_LoginInfo l 
				LEFT JOIN User_Info i ON l.UserID = i.UserID
				where 1=1
				<if test="startTime !=null and startTime !='' ">
					and DATE_FORMAT(l.LoginTime,'%Y-%m-%d') &gt;=#{startTime,jdbcType=TIMESTAMP}
				</if>
				<if test="endTime !=null and endTime != '' ">
					and DATE_FORMAT(l.LoginTime,'%Y-%m-%d') &lt;#{endTime,jdbcType=TIMESTAMP}
				</if>
				<if test="agentName != null and agentName !=''">
					and i.agent_id = #{agentName,jdbcType=VARCHAR} 
				</if>
				GROUP BY DATE_FORMAT(l.LoginTime,'%Y-%m-%d'),l.UserID,l.LoginFrom) a
	</select>
	<!-- 用户属性查询统计结束-htt -->

	<select id="getByAll" resultType="com.fx.xzt.sys.model.UserInfoModel"
		parameterType="java.util.Map">
		SELECT l.userName,u.UserID AS userIdString, NickName,
		ProfilePhotoPath, RegisterTime, RegisterFrom, PhoneNo,
		DeliveryAddress,
		RealName, IDCard, IDCardPath,IDCardBackPath, RealNameAuthApplyTime,
		RealNameAuthApproveTime,
		RealNameAuthApproveState,
		RealNameAuthStatus
		FROM User_Info u
		INNER JOIN User_Login l ON u.UserID = l.UserID
		<where>
			<!--<if test="realNameAuthApproveState != null and realNameAuthApproveState!='' 
				"> and u.RealNameAuthApproveState = #{realNameAuthApproveState,jdbcType=VARCHAR} 
				</if> -->
			and u.RealNameAuthApproveState = 0
			<if test="userName != null and userName!='' ">
				and l.UserName = #{userName,jdbcType=VARCHAR}
			</if>
			<if test="realName != null and realName!='' ">
				and RealName = #{realName,jdbcType=VARCHAR}
			</if>
			<if test="applyTimeStart !=null and applyTimeStart !='' ">
				and RealNameAuthApplyTime &gt;=#{applyTimeStart,jdbcType=TIMESTAMP}
			</if>
			<if test="applyTimeEnd !=null and applyTimeEnd != '' ">
				and RealNameAuthApplyTime &lt;=#{applyTimeEnd,jdbcType=TIMESTAMP}
			</if>
		</where>
		order by RealNameAuthApplyTime desc
	</select>
	<update id="editUserInfo" parameterType="com.fx.xzt.sys.entity.UserInfo">
		update User_Info
		<set>
			<if test="nickname != null">
				NickName = #{nickname,jdbcType=VARCHAR},
			</if>
			<if test="profilephotopath != null">
				ProfilePhotoPath = #{profilephotopath,jdbcType=VARCHAR},
			</if>
			<if test="registertime != null">
				RegisterTime = #{registertime,jdbcType=TIMESTAMP},
			</if>
			<if test="registerfrom != null">
				RegisterFrom = #{registerfrom,jdbcType=VARCHAR},
			</if>
			<if test="phoneno != null">
				PhoneNo = #{phoneno,jdbcType=VARCHAR},
			</if>
			<if test="deliveryaddress != null">
				DeliveryAddress = #{deliveryaddress,jdbcType=VARCHAR},
			</if>
			<if test="realname != null">
				RealName = #{realname,jdbcType=VARCHAR},
			</if>
			<if test="idcard != null">
				IDCard = #{idcard,jdbcType=VARCHAR},
			</if>
			<if test="idcardpath != null">
				IDCardPath = #{idcardpath,jdbcType=VARCHAR},
			</if>
			<if test="idcardbackpath != null">
				IDCardBackPath = #{idcardbackpath,jdbcType=VARCHAR},
			</if>
			<if test="realnameauthapplytime != null">
				RealNameAuthApplyTime = #{realnameauthapplytime,jdbcType=TIMESTAMP},
			</if>
			<if test="realnameauthapprovetime != null">
				RealNameAuthApproveTime = #{realnameauthapprovetime,jdbcType=TIMESTAMP},
			</if>
			<if test="realnameauthapprovestate != null">
				RealNameAuthApproveState = #{realnameauthapprovestate,jdbcType=SMALLINT},
			</if>
			<if test="realnameauthstatus != null">
				RealNameAuthStatus = #{realnameauthstatus,jdbcType=SMALLINT},
			</if>
			<if test="agentId != null">
				agent_id = #{agentId,jdbcType=VARCHAR},
			</if>
				broker_id = #{brokerId,jdbcType=TIMESTAMP},
			<if test="attribution != null">
				Attribution = #{attribution,jdbcType=TIMESTAMP},
			</if>
			<if test="registerIp != null">
				RegisterIp = #{registerIp,jdbcType=TIMESTAMP},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=SMALLINT},
			</if>
		</set>
		where UserID = #{userid,jdbcType=BIGINT}
	</update>
	<!--合作伙伴-获取下级客户信息 tianliya-->
	<select id="getSubClients" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT u.UserID AS userId,l.UserName AS userName,l.Status AS
		STATUS,u.RealName,u.RegisterTime registerTime,
		u.agent_id AS agentId, ua.user_name AS agentName, u.broker_id AS brokerId,
		u1.user_name AS brokerName ,
		format(a.rmb/100,2) AS rmb,format(a.finance/100,2) AS finance,format(a.frozen_rmb/100,2) AS frozenRmb,format(a.total_income/100,2) AS
		totalIncome,
		g.gold as gold
		FROM User_Info u
		RIGHT JOIN User_Login l ON u.UserID = l.UserID
		LEFT JOIN users ua ON u.agent_id = ua.id
		LEFT JOIN users u1 ON u.broker_id = u1.id
		LEFT JOIN user_account a ON a.user_id = u.UserID
		left join user_gold_account g on g.user_id = u.UserID
			<where>
				<if test="userName != null and userName != '' ">
					and l.UserName = #{userName,jdbcType=VARCHAR}
				</if>
				<if test="agentName != null and agentName !='' ">
					and ua.user_name = #{agentName,jdbcType=VARCHAR}
				</if>
				<if test="brokerName != null and brokerName !='' ">
					and u1.id = #{brokerName,jdbcType=VARCHAR}
				</if>
			</where>
			order by RegisterTime DESC
	</select>
	<!--合作伙伴-获取下级客户信息 tianliya-->
	<!--根据代理商获取客户信息 -tianliya-->
	<select id="selectUserInfoByAgentId1" parameterType="java.lang.Long" resultType="java.util.Map">
		select UserID from User_Info where agent_id = #{agentId,jdbcType=BIGINT}
	</select>
	<!--根据经纪人获取客户信息 -tianliya-->
	<select id="selectUserInfoByBrokerId1" parameterType="java.lang.Long" resultType="java.util.Map">
		select UserID from User_Info where broker_id = #{agentId,jdbcType=BIGINT}
	</select>
	<!--下级客户-财产信息统计 tianliya-->
	<select id="getSubClientsAccountCount" resultType="java.util.Map"
			parameterType="java.util.Map">
		SELECT format(SUM(rmb)/100,2) rmbSum, format(SUM(finance)/100,2) finaceSum, format(SUM(frozen_rmb),2)
		frozenRmbSum ,
		format(SUM(total_income)/100,2) AS totalIncomeSum, SUM(gold) goldSum
		FROM User_Info u
		RIGHT JOIN User_Login l ON u.UserID = l.UserID
		LEFT JOIN user_account a ON l.UserID = a.user_id
		LEFT JOIN user_gold_account ga ON ga.user_id = l.UserID
		LEFT JOIN users ua ON u.agent_id = ua.id
		LEFT JOIN users ub ON u.broker_id = ub.id
		<where>
			<if test="userName != null and userName != '' ">
				and l.UserName = #{userName,jdbcType=VARCHAR}
			</if>
			<if test="agentName != null and agentName !='' ">
				and ua.user_name = #{agentName,jdbcType=VARCHAR}
			</if>
			<if test="brokerName != null and brokerName !='' ">
				and ub.id = #{brokerName,jdbcType=VARCHAR}
			</if>

		</where>
	</select>
	<!--下级客户-财产信息 tianliya-->

	<!--修改客户的经济人 tianliya-->
	<update id="updateUserInfoBrokerId" parameterType="java.util.Map">
		update User_Info set broker_id=#{brokerId,jdbcType=BIGINT} where UserID = #{userId,jdbcType=BIGINT}
	</update>
	<update id="alertAgentAndBroker" parameterType="java.util.Map">
		update User_Info set broker_id=#{brokerId,jdbcType=BIGINT},agent_id=#{agentId,jdbcType=BIGINT} where UserID = #{userId,jdbcType=BIGINT}
	</update>
	<!--修改客户的经济人 tianliya-->
	<!-- <sql id="Example_Where_Clause" > <where > <foreach collection="oredCriteria" 
		item="criteria" separator="or" > <if test="criteria.valid" > <trim prefix="(" 
		suffix=")" prefixOverrides="and" > <foreach collection="criteria.criteria" 
		item="criterion" > <choose > <when test="criterion.noValue" > and ${criterion.condition} 
		</when> <when test="criterion.singleValue" > and ${criterion.condition} #{criterion.value} 
		</when> <when test="criterion.betweenValue" > and ${criterion.condition} 
		#{criterion.value} and #{criterion.secondValue} </when> <when test="criterion.listValue" 
		> and ${criterion.condition} <foreach collection="criterion.value" item="listItem" 
		open="(" close=")" separator="," > #{listItem} </foreach> </when> </choose> 
		</foreach> </trim> </if> </foreach> </where> </sql> <sql id="Update_By_Example_Where_Clause" 
		> <where > <foreach collection="example.oredCriteria" item="criteria" separator="or" 
		> <if test="criteria.valid" > <trim prefix="(" suffix=")" prefixOverrides="and" 
		> <foreach collection="criteria.criteria" item="criterion" > <choose > <when 
		test="criterion.noValue" > and ${criterion.condition} </when> <when test="criterion.singleValue" 
		> and ${criterion.condition} #{criterion.value} </when> <when test="criterion.betweenValue" 
		> and ${criterion.condition} #{criterion.value} and #{criterion.secondValue} 
		</when> <when test="criterion.listValue" > and ${criterion.condition} <foreach 
		collection="criterion.value" item="listItem" open="(" close=")" separator="," 
		> #{listItem} </foreach> </when> </choose> </foreach> </trim> </if> </foreach> 
		</where> </sql> <sql id="Base_Column_List" > UserID, NickName, ProfilePhotoPath, 
		RegisterTime, RegisterFrom, PhoneNo, DeliveryAddress, RealName, IDCard, IDCardPath, 
		RealNameAuthApplyTime, RealNameAuthApproveTime, RealNameAuthApproveState, 
		RealNameAuthStatus, CertificatePath, CertificateAuthApplyTime, CertificateAuthApproveTime, 
		CertificateAuthApproveState, CertificateAuthStatus </sql> <select id="selectByExample" 
		resultMap="BaseResultMap" parameterType="com.fx.xzt.sys.entity.UserInfoExample" 
		> select <if test="distinct" > distinct </if> <include refid="Base_Column_List" 
		/> from User_Info <if test="_parameter != null" > <include refid="Example_Where_Clause" 
		/> </if> <if test="orderByClause != null" > order by ${orderByClause} </if> 
		</select> <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" 
		> select <include refid="Base_Column_List" /> from User_Info where UserID 
		= #{userid,jdbcType=BIGINT} </select> <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" 
		> delete from User_Info where UserID = #{userid,jdbcType=BIGINT} </delete> 
		<delete id="deleteByExample" parameterType="com.fx.xzt.sys.entity.UserInfoExample" 
		> delete from User_Info <if test="_parameter != null" > <include refid="Example_Where_Clause" 
		/> </if> </delete> <insert id="insert" parameterType="com.fx.xzt.sys.entity.UserInfo" 
		> insert into User_Info (UserID, NickName, ProfilePhotoPath, RegisterTime, 
		RegisterFrom, PhoneNo, DeliveryAddress, RealName, IDCard, IDCardPath, RealNameAuthApplyTime, 
		RealNameAuthApproveTime, RealNameAuthApproveState, RealNameAuthStatus, CertificatePath, 
		CertificateAuthApplyTime, CertificateAuthApproveTime, CertificateAuthApproveState, 
		CertificateAuthStatus) values (#{userid,jdbcType=BIGINT}, #{nickname,jdbcType=VARCHAR}, 
		#{profilephotopath,jdbcType=VARCHAR}, #{registertime,jdbcType=TIMESTAMP}, 
		#{registerfrom,jdbcType=VARCHAR}, #{phoneno,jdbcType=VARCHAR}, #{deliveryaddress,jdbcType=VARCHAR}, 
		#{realname,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{idcardpath,jdbcType=VARCHAR}, 
		#{realnameauthapplytime,jdbcType=TIMESTAMP}, #{realnameauthapprovetime,jdbcType=TIMESTAMP}, 
		#{realnameauthapprovestate,jdbcType=SMALLINT}, #{realnameauthstatus,jdbcType=SMALLINT}, 
		#{certificatepath,jdbcType=VARCHAR}, #{certificateauthapplytime,jdbcType=TIMESTAMP}, 
		#{certificateauthapprovetime,jdbcType=TIMESTAMP}, #{certificateauthapprovestate,jdbcType=TIMESTAMP}, 
		#{certificateauthstatus,jdbcType=SMALLINT}) </insert> <insert id="insertSelective" 
		parameterType="com.fx.xzt.sys.entity.UserInfo" > insert into User_Info <trim 
		prefix="(" suffix=")" suffixOverrides="," > <if test="userid != null" > UserID, 
		</if> <if test="nickname != null" > NickName, </if> <if test="profilephotopath 
		!= null" > ProfilePhotoPath, </if> <if test="registertime != null" > RegisterTime, 
		</if> <if test="registerfrom != null" > RegisterFrom, </if> <if test="phoneno 
		!= null" > PhoneNo, </if> <if test="deliveryaddress != null" > DeliveryAddress, 
		</if> <if test="realname != null" > RealName, </if> <if test="idcard != null" 
		> IDCard, </if> <if test="idcardpath != null" > IDCardPath, </if> <if test="realnameauthapplytime 
		!= null" > RealNameAuthApplyTime, </if> <if test="realnameauthapprovetime 
		!= null" > RealNameAuthApproveTime, </if> <if test="realnameauthapprovestate 
		!= null" > RealNameAuthApproveState, </if> <if test="realnameauthstatus != 
		null" > RealNameAuthStatus, </if> <if test="certificatepath != null" > CertificatePath, 
		</if> <if test="certificateauthapplytime != null" > CertificateAuthApplyTime, 
		</if> <if test="certificateauthapprovetime != null" > CertificateAuthApproveTime, 
		</if> <if test="certificateauthapprovestate != null" > CertificateAuthApproveState, 
		</if> <if test="certificateauthstatus != null" > CertificateAuthStatus, </if> 
		</trim> <trim prefix="values (" suffix=")" suffixOverrides="," > <if test="userid 
		!= null" > #{userid,jdbcType=BIGINT}, </if> <if test="nickname != null" > 
		#{nickname,jdbcType=VARCHAR}, </if> <if test="profilephotopath != null" > 
		#{profilephotopath,jdbcType=VARCHAR}, </if> <if test="registertime != null" 
		> #{registertime,jdbcType=TIMESTAMP}, </if> <if test="registerfrom != null" 
		> #{registerfrom,jdbcType=VARCHAR}, </if> <if test="phoneno != null" > #{phoneno,jdbcType=VARCHAR}, 
		</if> <if test="deliveryaddress != null" > #{deliveryaddress,jdbcType=VARCHAR}, 
		</if> <if test="realname != null" > #{realname,jdbcType=VARCHAR}, </if> <if 
		test="idcard != null" > #{idcard,jdbcType=VARCHAR}, </if> <if test="idcardpath 
		!= null" > #{idcardpath,jdbcType=VARCHAR}, </if> <if test="realnameauthapplytime 
		!= null" > #{realnameauthapplytime,jdbcType=TIMESTAMP}, </if> <if test="realnameauthapprovetime 
		!= null" > #{realnameauthapprovetime,jdbcType=TIMESTAMP}, </if> <if test="realnameauthapprovestate 
		!= null" > #{realnameauthapprovestate,jdbcType=SMALLINT}, </if> <if test="realnameauthstatus 
		!= null" > #{realnameauthstatus,jdbcType=SMALLINT}, </if> <if test="certificatepath 
		!= null" > #{certificatepath,jdbcType=VARCHAR}, </if> <if test="certificateauthapplytime 
		!= null" > #{certificateauthapplytime,jdbcType=TIMESTAMP}, </if> <if test="certificateauthapprovetime 
		!= null" > #{certificateauthapprovetime,jdbcType=TIMESTAMP}, </if> <if test="certificateauthapprovestate 
		!= null" > #{certificateauthapprovestate,jdbcType=TIMESTAMP}, </if> <if test="certificateauthstatus 
		!= null" > #{certificateauthstatus,jdbcType=SMALLINT}, </if> </trim> </insert> 
		<select id="countByExample" parameterType="com.fx.xzt.sys.entity.UserInfoExample" 
		resultType="java.lang.Integer" > select count(*) from User_Info <if test="_parameter 
		!= null" > <include refid="Example_Where_Clause" /> </if> </select> <update 
		id="updateByExampleSelective" parameterType="map" > update User_Info <set 
		> <if test="record.userid != null" > UserID = #{record.userid,jdbcType=BIGINT}, 
		</if> <if test="record.nickname != null" > NickName = #{record.nickname,jdbcType=VARCHAR}, 
		</if> <if test="record.profilephotopath != null" > ProfilePhotoPath = #{record.profilephotopath,jdbcType=VARCHAR}, 
		</if> <if test="record.registertime != null" > RegisterTime = #{record.registertime,jdbcType=TIMESTAMP}, 
		</if> <if test="record.registerfrom != null" > RegisterFrom = #{record.registerfrom,jdbcType=VARCHAR}, 
		</if> <if test="record.phoneno != null" > PhoneNo = #{record.phoneno,jdbcType=VARCHAR}, 
		</if> <if test="record.deliveryaddress != null" > DeliveryAddress = #{record.deliveryaddress,jdbcType=VARCHAR}, 
		</if> <if test="record.realname != null" > RealName = #{record.realname,jdbcType=VARCHAR}, 
		</if> <if test="record.idcard != null" > IDCard = #{record.idcard,jdbcType=VARCHAR}, 
		</if> <if test="record.idcardpath != null" > IDCardPath = #{record.idcardpath,jdbcType=VARCHAR}, 
		</if> <if test="record.realnameauthapplytime != null" > RealNameAuthApplyTime 
		= #{record.realnameauthapplytime,jdbcType=TIMESTAMP}, </if> <if test="record.realnameauthapprovetime 
		!= null" > RealNameAuthApproveTime = #{record.realnameauthapprovetime,jdbcType=TIMESTAMP}, 
		</if> <if test="record.realnameauthapprovestate != null" > RealNameAuthApproveState 
		= #{record.realnameauthapprovestate,jdbcType=SMALLINT}, </if> <if test="record.realnameauthstatus 
		!= null" > RealNameAuthStatus = #{record.realnameauthstatus,jdbcType=SMALLINT}, 
		</if> <if test="record.certificatepath != null" > CertificatePath = #{record.certificatepath,jdbcType=VARCHAR}, 
		</if> <if test="record.certificateauthapplytime != null" > CertificateAuthApplyTime 
		= #{record.certificateauthapplytime,jdbcType=TIMESTAMP}, </if> <if test="record.certificateauthapprovetime 
		!= null" > CertificateAuthApproveTime = #{record.certificateauthapprovetime,jdbcType=TIMESTAMP}, 
		</if> <if test="record.certificateauthapprovestate != null" > CertificateAuthApproveState 
		= #{record.certificateauthapprovestate,jdbcType=TIMESTAMP}, </if> <if test="record.certificateauthstatus 
		!= null" > CertificateAuthStatus = #{record.certificateauthstatus,jdbcType=SMALLINT}, 
		</if> </set> <if test="_parameter != null" > <include refid="Update_By_Example_Where_Clause" 
		/> </if> </update> <update id="updateByExample" parameterType="map" > update 
		User_Info set UserID = #{record.userid,jdbcType=BIGINT}, NickName = #{record.nickname,jdbcType=VARCHAR}, 
		ProfilePhotoPath = #{record.profilephotopath,jdbcType=VARCHAR}, RegisterTime 
		= #{record.registertime,jdbcType=TIMESTAMP}, RegisterFrom = #{record.registerfrom,jdbcType=VARCHAR}, 
		PhoneNo = #{record.phoneno,jdbcType=VARCHAR}, DeliveryAddress = #{record.deliveryaddress,jdbcType=VARCHAR}, 
		RealName = #{record.realname,jdbcType=VARCHAR}, IDCard = #{record.idcard,jdbcType=VARCHAR}, 
		IDCardPath = #{record.idcardpath,jdbcType=VARCHAR}, RealNameAuthApplyTime 
		= #{record.realnameauthapplytime,jdbcType=TIMESTAMP}, RealNameAuthApproveTime 
		= #{record.realnameauthapprovetime,jdbcType=TIMESTAMP}, RealNameAuthApproveState 
		= #{record.realnameauthapprovestate,jdbcType=SMALLINT}, RealNameAuthStatus 
		= #{record.realnameauthstatus,jdbcType=SMALLINT}, CertificatePath = #{record.certificatepath,jdbcType=VARCHAR}, 
		CertificateAuthApplyTime = #{record.certificateauthapplytime,jdbcType=TIMESTAMP}, 
		CertificateAuthApproveTime = #{record.certificateauthapprovetime,jdbcType=TIMESTAMP}, 
		CertificateAuthApproveState = #{record.certificateauthapprovestate,jdbcType=TIMESTAMP}, 
		CertificateAuthStatus = #{record.certificateauthstatus,jdbcType=SMALLINT} 
		<if test="_parameter != null" > <include refid="Update_By_Example_Where_Clause" 
		/> </if> </update> <update id="updateByPrimaryKeySelective" parameterType="com.fx.xzt.sys.entity.UserInfo" 
		> update User_Info <set > <if test="nickname != null" > NickName = #{nickname,jdbcType=VARCHAR}, 
		</if> <if test="profilephotopath != null" > ProfilePhotoPath = #{profilephotopath,jdbcType=VARCHAR}, 
		</if> <if test="registertime != null" > RegisterTime = #{registertime,jdbcType=TIMESTAMP}, 
		</if> <if test="registerfrom != null" > RegisterFrom = #{registerfrom,jdbcType=VARCHAR}, 
		</if> <if test="phoneno != null" > PhoneNo = #{phoneno,jdbcType=VARCHAR}, 
		</if> <if test="deliveryaddress != null" > DeliveryAddress = #{deliveryaddress,jdbcType=VARCHAR}, 
		</if> <if test="realname != null" > RealName = #{realname,jdbcType=VARCHAR}, 
		</if> <if test="idcard != null" > IDCard = #{idcard,jdbcType=VARCHAR}, </if> 
		<if test="idcardpath != null" > IDCardPath = #{idcardpath,jdbcType=VARCHAR}, 
		</if> <if test="realnameauthapplytime != null" > RealNameAuthApplyTime = 
		#{realnameauthapplytime,jdbcType=TIMESTAMP}, </if> <if test="realnameauthapprovetime 
		!= null" > RealNameAuthApproveTime = #{realnameauthapprovetime,jdbcType=TIMESTAMP}, 
		</if> <if test="realnameauthapprovestate != null" > RealNameAuthApproveState 
		= #{realnameauthapprovestate,jdbcType=SMALLINT}, </if> <if test="realnameauthstatus 
		!= null" > RealNameAuthStatus = #{realnameauthstatus,jdbcType=SMALLINT}, 
		</if> <if test="certificatepath != null" > CertificatePath = #{certificatepath,jdbcType=VARCHAR}, 
		</if> <if test="certificateauthapplytime != null" > CertificateAuthApplyTime 
		= #{certificateauthapplytime,jdbcType=TIMESTAMP}, </if> <if test="certificateauthapprovetime 
		!= null" > CertificateAuthApproveTime = #{certificateauthapprovetime,jdbcType=TIMESTAMP}, 
		</if> <if test="certificateauthapprovestate != null" > CertificateAuthApproveState 
		= #{certificateauthapprovestate,jdbcType=TIMESTAMP}, </if> <if test="certificateauthstatus 
		!= null" > CertificateAuthStatus = #{certificateauthstatus,jdbcType=SMALLINT}, 
		</if> </set> where UserID = #{userid,jdbcType=BIGINT} </update> <update id="updateByPrimaryKey" 
		parameterType="com.fx.xzt.sys.entity.UserInfo" > update User_Info set NickName 
		= #{nickname,jdbcType=VARCHAR}, ProfilePhotoPath = #{profilephotopath,jdbcType=VARCHAR}, 
		RegisterTime = #{registertime,jdbcType=TIMESTAMP}, RegisterFrom = #{registerfrom,jdbcType=VARCHAR}, 
		PhoneNo = #{phoneno,jdbcType=VARCHAR}, DeliveryAddress = #{deliveryaddress,jdbcType=VARCHAR}, 
		RealName = #{realname,jdbcType=VARCHAR}, IDCard = #{idcard,jdbcType=VARCHAR}, 
		IDCardPath = #{idcardpath,jdbcType=VARCHAR}, RealNameAuthApplyTime = #{realnameauthapplytime,jdbcType=TIMESTAMP}, 
		RealNameAuthApproveTime = #{realnameauthapprovetime,jdbcType=TIMESTAMP}, 
		RealNameAuthApproveState = #{realnameauthapprovestate,jdbcType=SMALLINT}, 
		RealNameAuthStatus = #{realnameauthstatus,jdbcType=SMALLINT}, CertificatePath 
		= #{certificatepath,jdbcType=VARCHAR}, CertificateAuthApplyTime = #{certificateauthapplytime,jdbcType=TIMESTAMP}, 
		CertificateAuthApproveTime = #{certificateauthapprovetime,jdbcType=TIMESTAMP}, 
		CertificateAuthApproveState = #{certificateauthapprovestate,jdbcType=TIMESTAMP}, 
		CertificateAuthStatus = #{certificateauthstatus,jdbcType=SMALLINT} where 
		UserID = #{userid,jdbcType=BIGINT} </update> -->
</mapper>