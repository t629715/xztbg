<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fx.xzt.sys.mapper.UserInfoMapper">
	<resultMap id="BaseResultMap" type="com.fx.xzt.sys.entity.UserInfo">
		<id column="UserID" property="userid" jdbcType="BIGINT" />
		<result column="NickName" property="nickname" jdbcType="VARCHAR" />
		<result column="ProfilePhotoPath" property="profilephotopath"
			jdbcType="VARCHAR" />
		<result column="RegisterTime" property="registertime" jdbcType="TIMESTAMP" />
		<result column="RegisterFrom" property="registerfrom" jdbcType="VARCHAR" />
		<result column="PhoneNo" property="phoneno" jdbcType="VARCHAR" />
		<result column="DeliveryAddress" property="deliveryaddress"
			jdbcType="VARCHAR" />
		<result column="RealName" property="realname" jdbcType="VARCHAR" />
		<result column="IDCard" property="idcard" jdbcType="VARCHAR" />
		<result column="IDCardPath" property="idcardpath" jdbcType="VARCHAR" />
		<result column="IDCardBackPath" property="idcardbackpath"
			jdbcType="VARCHAR" />
		<result column="RealNameAuthApplyTime" property="realnameauthapplytime"
			jdbcType="TIMESTAMP" />
		<result column="RealNameAuthApproveTime" property="realnameauthapprovetime"
			jdbcType="TIMESTAMP" />
		<result column="RealNameAuthApproveState" property="realnameauthapprovestate"
			jdbcType="SMALLINT" />
		<result column="RealNameAuthStatus" property="realnameauthstatus"
			jdbcType="SMALLINT" />
		<result column="agent_id" property="agentId" jdbcType="BIGINT" />
		<result column="broker_id" property="brokerId" jdbcType="BIGINT" />
		<result column="RegisterIp" property="registerIp" jdbcType="VARCHAR" />
		<result column="Attribution" property="attribution" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		UserID, NickName, ProfilePhotoPath, RegisterTime, RegisterFrom, PhoneNo,
		DeliveryAddress,
		RealName, IDCard, IDCardPath, RealNameAuthApplyTime, RealNameAuthApproveTime,
		RealNameAuthApproveState,
		RealNameAuthStatus, agent_id, broker_id, RegisterIp, Attribution
	</sql>
	
	<!-- 根据id获取用户信息开始-htt -->
	<select id="selectUserInfoById" parameterType="java.lang.Long" resultType="java.util.Map">
		select UserID,agent_id agentId,broker_id brokerId, channel_id channelId from User_Info where UserID = #{userID,jdbcType=BIGINT}
	</select>
	<!-- 根据id获取用户信息结束-htt -->
	
	<!--实名认证查询开始-htt -->
	<select id="getByRealNameAuth" resultType="java.util.Map"
		parameterType="java.util.Map">
		SELECT 
		<if test='isView == "1"'>
            l.UserName userName,
        </if>
        <if test='isView != "1"'>
            INSERT(l.UserName, 4, 4, '****') userName,
        </if>
		cast(u.UserID as CHAR) UserID , RealName, IDCard,
		IDCardPath,IDCardBackPath, RealNameAuthApplyTime,
		RealNameAuthApproveTime, RealNameAuthApproveState,RealNameAuthStatus
		FROM User_Info u
		INNER JOIN User_Login l ON u.UserID = l.UserID
		<where>
			and l.Status = 1
			and u.RealNameAuthApproveState = 0
			and u.RealNameAuthStatus = 2
			<if test="userName != null and userName!='' ">
				and l.UserName = #{userName,jdbcType=VARCHAR}
			</if>
			<if test="realName != null and realName!='' ">
				and RealName = #{realName,jdbcType=VARCHAR}
			</if>
			<if test="applyTimeStart !=null and applyTimeStart !='' ">
				and RealNameAuthApplyTime &gt;=#{applyTimeStart,jdbcType=TIMESTAMP}
			</if>
			<if test="applyTimeEnd !=null and applyTimeEnd != '' ">
				and RealNameAuthApplyTime &lt;#{applyTimeEnd,jdbcType=TIMESTAMP}
			</if>
		</where>
		order by RealNameAuthApplyTime desc
	</select>
	<!--实名认证查询结束 -->
	<!--实名认证查询已审核开始-htt -->
	<select id="getByRealNameAuthApprove" resultType="java.util.Map"
		parameterType="java.util.Map">
		SELECT 
		<if test='isView == "1"'>
            l.UserName userName,
        </if>
        <if test='isView != "1"'>
            INSERT(l.UserName, 4, 4, '****') userName,
        </if>
		cast(u.UserID as CHAR) UserID , RealName, IDCard,
		IDCardPath,IDCardBackPath, RealNameAuthApplyTime,
		RealNameAuthApproveTime, RealNameAuthApproveState,RealNameAuthStatus
		FROM User_Info u
		INNER JOIN User_Login l ON u.UserID = l.UserID
		<where>
			and l.Status = 1
			and u.RealNameAuthApproveState != 0
			<if test="userName != null and userName!='' ">
				and l.UserName = #{userName,jdbcType=VARCHAR}
			</if>
			<if test="realName != null and realName!='' ">
				and RealName = #{realName,jdbcType=VARCHAR}
			</if>
			<if test="state != null and state !='' ">
				and RealNameAuthApproveState = #{state,jdbcType=SMALLINT}
			</if>
			<if test="applyTimeStart !=null and applyTimeStart !='' ">
				and RealNameAuthApplyTime &gt;=#{applyTimeStart,jdbcType=TIMESTAMP}
			</if>
			<if test="applyTimeEnd !=null and applyTimeEnd != '' ">
				and RealNameAuthApplyTime &lt;#{applyTimeEnd,jdbcType=TIMESTAMP}
			</if>
		</where>
		order by RealNameAuthApplyTime desc
	</select>
	<!--实名认证已审核查询结束 -->
	<!--账户信息查询 -->
	<select id="getByAccountMessage" resultType="java.util.Map"
		parameterType="java.util.Map">
		SELECT CAST(u.UserID AS  CHAR ) AS userId,
		<if test='isView == "1"'>
            l.UserName userName,
        </if>
        <if test='isView != "1"'>
            INSERT(l.UserName, 4, 4, '****') userName,
        </if>
		u.NickName nickName, u.RealNameAuthStatus realNameAuthStatus, l.Status AS
		STATUS,u.RealName,u.RegisterTime registerTime,
		u.agent_id AS agentId, ua.user_name AS agentName, u.broker_id AS brokerId,
		u1.user_name AS brokerName ,
		u.IDCard AS idcard,
		(SELECT GROUP_CONCAT(AccountNum) FROM User_BankCard where u.UserID = UserID) accountNum,
		p.alipay_number alipayNumber,
		a.rmb AS rmb,a.finance AS finance,a.frozen_rmb AS frozenRmb,g.total_income AS
		totalIncome,
		g.gold as gold, g.finance_gold financeGold2, g.average_price averagePrice,
		ifnull(wzj.wzj, 0) financeGold
		<!--, a.frozen_gold as frozenGold -->
		FROM User_Login l
		RIGHT JOIN User_Info u ON u.UserID = l.UserID
		LEFT JOIN users ua ON u.agent_id = ua.id
		LEFT JOIN users u1 ON u.broker_id = u1.id
		LEFT JOIN user_alipay p on u.UserID = p.user_id
		LEFT JOIN user_account a ON a.user_id = l.UserID
		left join user_gold_account g on g.user_id = l.UserID
		LEFT JOIN (SELECT user_id, format(sum(gram), 3) wzj from finance_regulargold_order where status = 1 GROUP BY user_id) wzj on wzj.user_id = l.UserID
		<where>
			<!-- and l.Status = 1  -->
			<if test="userName != null and userName != '' ">
				and l.UserName = #{userName,jdbcType=VARCHAR}
			</if>
			<if test="agentsName != null and agentsName !='' ">
				and ua.id = #{agentsName,jdbcType=BIGINT}
			</if>
			<if test="brokerName != null and brokerName !='' ">
				and u1.id = #{brokerName,jdbcType=BIGINT}
			</if>
			<if test="startTime !=null and startTime !='' ">
				and u.RegisterTime &gt;=#{startTime,jdbcType=TIMESTAMP}
			</if>
			<if test="endTime !=null and endTime != '' ">
				and u.RegisterTime &lt;#{endTime,jdbcType=TIMESTAMP}
			</if>
		</where>
		order by RegisterTime DESC
	</select>
	<!--账户信息查询结束 -->
	<!--账户信息查询金额统计开始 -htt -->
	<select id="getByAccountCount" resultType="java.util.Map"
		parameterType="java.util.Map">
		SELECT SUM(a.rmb) rmbSum, format(SUM(ga.gold), 3) goldSum, format(SUM(ga.finance_gold), 3) financeGoldSum2,
		format(SUM(ifnull(wzj.wzj, 0)), 3) financeGoldSum,
		SUM(ga.average_price * ga.gold)/SUM(ga.gold) cbj
		FROM User_Login l
		LEFT JOIN User_Info u ON u.UserID = l.UserID
		LEFT JOIN user_account a ON l.UserID = a.user_id
		LEFT JOIN user_gold_account ga ON ga.user_id = l.UserID
		LEFT JOIN users ua ON u.agent_id = ua.id
		LEFT JOIN users ub ON u.broker_id = ub.id
		LEFT JOIN (SELECT user_id, format(sum(gram), 3) wzj from finance_regulargold_order where status = 1 GROUP BY user_id) wzj on wzj.user_id = l.UserID
		<where>
			<!-- and l.Status = 1 -->
			<if test="userName != null and userName != '' ">
				and l.UserName = #{userName,jdbcType=VARCHAR}
			</if>
			<if test="agentsName != null and agentsName !='' ">
				and ua.id = #{agentsName,jdbcType=BIGINT}
			</if>
			<if test="brokerName != null and brokerName !='' ">
				and ub.id = #{brokerName,jdbcType=BIGINT}
			</if>
			<if test="startTime !=null and startTime !='' ">
				and u.RegisterTime &gt;=#{startTime,jdbcType=TIMESTAMP}
			</if>
			<if test="endTime !=null and endTime != '' ">
				and u.RegisterTime &lt;#{endTime,jdbcType=TIMESTAMP}
			</if>
		</where>
	</select>
	<!--账户信息查询金额统计结束 -->
	
	<!-- 用户分析查询统计开始-htt -->
	<select id="getByUserAnalysisCount" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT t1.hjrj, t1.xrj, ifnull(t1.xrj/t1.hjrj, 0) xrjbl, t1.hjjy, t1.xjy, ifnull(t1.xjy/t1.hjjy, 0) xjybl, t1.xzc,
			(SELECT COUNT(DISTINCT r3.UserID) FROM User_Recharge r3) zrj,
			(SELECT COUNT(i1.UserID) FROM User_Info i1) zyh from (
			SELECT SUM(t.hjrj) hjrj, SUM(t.xrj) xrj,
				SUM(t.hjjqjy) + SUM(t.hjdqj) + SUM(t.hjcjb) hjjy, 
				SUM(t.xjqjy) + SUM(xdqj) + SUM(t.xcjb) xjy,
				SUM(t.xzc) xzc FROM (
				SELECT d.date,	
					(SELECT COUNT(DISTINCT r.UserID) FROM User_Recharge r 
						LEFT JOIN User_Info u ON u.UserID = u.UserID WHERE DATE_FORMAT(r.RechargeTime,'%Y-%m-%d') = d.date 
						<if test="agentName != null and agentName !='' ">
							and u.agent_id = #{agentName,jdbcType=BIGINT}
						</if>
						<if test="registerFrom != null and registerFrom !='' ">
							and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
						</if>
					) hjrj,
					(SELECT COUNT(r2.UserID) FROM (SELECT r1.UserID,MIN(DATE_FORMAT(r1.RechargeTime,'%Y-%m-%d')) minDate FROM User_Recharge r1
						LEFT JOIN User_Info u ON u.UserID = r1.UserID where 1=1 
						<if test="agentName != null and agentName !='' ">
							and u.agent_id = #{agentName,jdbcType=BIGINT}
						</if>
						<if test="registerFrom != null and registerFrom !='' ">
							and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
						</if>
						GROUP BY r1.UserID) r2 WHERE r2.minDate = d.date) xrj,
					(SELECT COUNT(DISTINCT o.user_id) FROM deal_order o 
						LEFT JOIN User_Info u ON u.UserID = o.user_id WHERE DATE_FORMAT(o.create_time,'%Y-%m-%d') = d.date 
						<if test="agentName != null and agentName !='' ">
							and u.agent_id = #{agentName,jdbcType=BIGINT}
						</if>
						<if test="registerFrom != null and registerFrom !='' ">
							and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
						</if>
					) hjjqjy,
					(SELECT COUNT(d1.user_id) FROM (SELECT o1.user_id,MIN(DATE_FORMAT(o1.create_time,'%Y-%m-%d')) minDate FROM deal_order o1 
						LEFT JOIN User_Info u ON u.UserID = o1.user_id where 1=1  
						<if test="agentName != null and agentName !='' ">
							and u.agent_id = #{agentName,jdbcType=BIGINT}
						</if>
						<if test="registerFrom != null and registerFrom !='' ">
							and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
						</if>
						GROUP BY o1.user_id) d1 WHERE d1.minDate = d.date) xjqjy,
					(SELECT COUNT(DISTINCT f.user_id) FROM finance_regulargold_order f 
						LEFT JOIN User_Info u ON u.UserID = f.user_id WHERE 1=1 AND DATE_FORMAT(f.buy_time,'%Y-%m-%d') = d.date 
						<if test="agentName != null and agentName !='' ">
							and u.agent_id = #{agentName,jdbcType=BIGINT}
						</if>
						<if test="registerFrom != null and registerFrom !='' ">
							and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
						</if>
					) hjdqj,
					(SELECT COUNT(e.user_id) FROM (SELECT f1.user_id,MIN(DATE_FORMAT(f1.buy_time,'%Y-%m-%d')) minDate FROM finance_regulargold_order f1 
						LEFT JOIN User_Info u ON u.UserID = f1.user_id WHERE 1=1 
						<if test="agentName != null and agentName !='' ">
							and u.agent_id = #{agentName,jdbcType=BIGINT}
						</if>
						<if test="registerFrom != null and registerFrom !='' ">
							and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
						</if>
						GROUP BY f1.user_id) e WHERE e.minDate = d.date) xdqj,
					(SELECT COUNT(DISTINCT f2.user_id) FROM save_gold_record f2 
						LEFT JOIN User_Info u ON u.UserID = f2.user_id WHERE f2.type = 1 AND DATE_FORMAT(f2.create_time,'%Y-%m-%d') = d.date 
						<if test="agentName != null and agentName !='' ">
							and u.agent_id = #{agentName,jdbcType=BIGINT}
						</if>
						<if test="registerFrom != null and registerFrom !='' ">
							and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
						</if>
					) hjcjb,
					(SELECT COUNT(g.user_id) FROM (SELECT f3.user_id,MIN(DATE_FORMAT(f3.create_time,'%Y-%m-%d')) minDate FROM save_gold_record f3 
						LEFT JOIN User_Info u ON u.UserID = f3.user_id WHERE f3.type = 1 
						<if test="agentName != null and agentName !='' ">
							and u.agent_id = #{agentName,jdbcType=BIGINT}
						</if>
						<if test="registerFrom != null and registerFrom !='' ">
							and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
						</if>
						GROUP BY f3.user_id) g WHERE g.minDate = d.date) xcjb,
					(SELECT COUNT(i.UserID) FROM User_Info i 
						LEFT JOIN User_Info u ON u.UserID = i.UserID WHERE DATE_FORMAT(i.RegisterTime,'%Y-%m-%d') = d.date 
						<if test="agentName != null and agentName !='' ">
							and u.agent_id = #{agentName,jdbcType=BIGINT} 
						</if>
						<if test="registerFrom != null and registerFrom !='' ">
							and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT} 
						</if>
					) xzc
				FROM until_date d where 1=1 
				<if test="startTime !=null and startTime !='' ">
					and d.date &gt;=#{startTime,jdbcType=TIMESTAMP}
				</if>
				<if test="endTime !=null and endTime != '' ">
					and d.date &lt;#{endTime,jdbcType=TIMESTAMP}
				</if>
		) t ) t1
	</select>
	<!-- 用户分析查询统计结束-htt -->
	
	<!-- 用户分析查询开始-htt -->
	<select id="getByUserAnalysis" resultType="java.util.Map" parameterType="java.util.Map">
	SELECT t.date, t.hjrj, t.xrj, ifnull(t.xrj/t.hjrj, 0) xrjbl, t.hjjqjy, t.xjqjy, ifnull(t.xjqjy/t.hjjqjy, 0) xjqjybl, 
	t.hjdqj, t.xdqj, ifnull(t.xdqj/t.hjdqj, 0) xdqjbl, 
	t.hjcjb, t.xcjb, ifnull(t.xcjb/t.hjcjb, 0) xcjbbl, t.xzc, 
	(ifnull(t.hjjqjy, 0) + ifnull(t.hjdqj, 0) + ifnull(t.hjcjb, 0)) zjy,
	t.zzc, t.zrj FROM (
		SELECT d.date,	
			(SELECT COUNT(DISTINCT r.UserID) FROM User_Recharge r 
				LEFT JOIN User_Info u ON u.UserID = u.UserID WHERE DATE_FORMAT(r.RechargeTime,'%Y-%m-%d') = d.date 
				<if test="agentName != null and agentName !='' ">
					and u.agent_id = #{agentName,jdbcType=BIGINT}
				</if>
				<if test="registerFrom != null and registerFrom !='' ">
					and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
				</if>
			) hjrj,
			(SELECT COUNT(r2.UserID) FROM (SELECT r1.UserID,MIN(DATE_FORMAT(r1.RechargeTime,'%Y-%m-%d')) minDate FROM User_Recharge r1
				LEFT JOIN User_Info u ON u.UserID = r1.UserID where 1=1 
				<if test="agentName != null and agentName !='' ">
					and u.agent_id = #{agentName,jdbcType=BIGINT}
				</if>
				<if test="registerFrom != null and registerFrom !='' ">
					and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
				</if>
				GROUP BY r1.UserID) r2 WHERE r2.minDate = d.date) xrj,
			(SELECT COUNT(DISTINCT o.user_id) FROM deal_order o 
				LEFT JOIN User_Info u ON u.UserID = o.user_id WHERE DATE_FORMAT(o.create_time,'%Y-%m-%d') = d.date
				<if test="agentName != null and agentName !='' ">
					and u.agent_id = #{agentName,jdbcType=BIGINT}
				</if>
				<if test="registerFrom != null and registerFrom !='' ">
					and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
				</if>
			) hjjqjy,
			(SELECT COUNT(d1.user_id) FROM (SELECT o1.user_id,MIN(DATE_FORMAT(o1.create_time,'%Y-%m-%d')) minDate FROM deal_order o1 
				LEFT JOIN User_Info u ON u.UserID = o1.user_id where 1=1 
				<if test="agentName != null and agentName !='' ">
					and u.agent_id = #{agentName,jdbcType=BIGINT}
				</if>
				<if test="registerFrom != null and registerFrom !='' ">
					and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
				</if>
				GROUP BY o1.user_id) d1 WHERE d1.minDate = d.date) xjqjy,
			(SELECT COUNT(DISTINCT f.user_id) FROM finance_regulargold_order f 
				LEFT JOIN User_Info u ON u.UserID = f.user_id WHERE  DATE_FORMAT(f.buy_time,'%Y-%m-%d') = d.date 
				<if test="agentName != null and agentName !='' ">
					and u.agent_id = #{agentName,jdbcType=BIGINT} 
				</if>
				<if test="registerFrom != null and registerFrom !='' ">
					and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT} 
				</if>
			) hjdqj,
			(SELECT COUNT(e.user_id) FROM (SELECT f1.user_id,MIN(DATE_FORMAT(f1.buy_time,'%Y-%m-%d')) minDate FROM finance_regulargold_order f1 
				LEFT JOIN User_Info u ON u.UserID = f1.user_id WHERE 1=1 
				<if test="agentName != null and agentName !='' ">
					and u.agent_id = #{agentName,jdbcType=BIGINT} 
				</if>
				<if test="registerFrom != null and registerFrom !='' ">
					and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT} 
				</if>
				GROUP BY f1.user_id) e WHERE e.minDate = d.date) xdqj,
			(SELECT COUNT(DISTINCT rgo.user_id) FROM save_gold_record rgo 
				LEFT JOIN User_Info u ON u.UserID = rgo.user_id WHERE DATE_FORMAT(rgo.create_time,'%Y-%m-%d') = d.date 
				<if test="agentName != null and agentName !='' ">
					and u.agent_id = #{agentName,jdbcType=BIGINT} 
				</if>
				<if test="registerFrom != null and registerFrom !='' ">
					and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT} 
				</if>
			) hjcjb,
			(SELECT COUNT(rgo1.user_id) FROM (SELECT r.user_id,MIN(DATE_FORMAT(r.create_time,'%Y-%m-%d')) minDate FROM save_gold_record r 
				LEFT JOIN User_Info u ON u.UserID = r.user_id 
				where 1=1 
				<if test="agentName != null and agentName !='' ">
					and u.agent_id = #{agentName,jdbcType=BIGINT} 
				</if>
				<if test="registerFrom != null and registerFrom !='' ">
					and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT} 
				</if>
				GROUP BY r.user_id) rgo1 WHERE rgo1.minDate = d.date) xcjb,				
			(SELECT COUNT(i.UserID) FROM User_Info i 
				LEFT JOIN User_Info u ON u.UserID = i.UserID WHERE DATE_FORMAT(i.RegisterTime,'%Y-%m-%d') = d.date 
				<if test="agentName != null and agentName !='' ">
					and u.agent_id = #{agentName,jdbcType=BIGINT} 
				</if>
				<if test="registerFrom != null and registerFrom !='' ">
					and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT} 
				</if>
			) xzc,
			(SELECT COUNT(i1.UserID) FROM User_Info i1 
				<!-- LEFT JOIN User_Info u ON u.UserID = i1.UserID  -->
				 WHERE DATE_FORMAT(i1.RegisterTime,'%Y-%m-%d') &lt;= d.date 
				<if test="agentName != null and agentName !='' ">
					and i1.agent_id = #{agentName,jdbcType=BIGINT}
				</if>
				<if test="registerFrom != null and registerFrom !='' ">
					and i1.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
				</if>
			) zzc,
			(SELECT COUNT(DISTINCT r3.UserID) FROM User_Recharge r3 
				LEFT JOIN User_Info u ON u.UserID = r3.UserID WHERE DATE_FORMAT(r3.RechargeTime,'%Y-%m-%d') &lt;= d.date 
				<if test="agentName != null and agentName !='' ">
					and u.agent_id = #{agentName,jdbcType=BIGINT}
				</if>
				<if test="registerFrom != null and registerFrom !='' ">
					and u.RegisterFrom = #{registerFrom,jdbcType=BIGINT}
				</if>
			) zrj
		FROM until_date d where 1=1 
		<if test="startTime !=null and startTime !='' ">
			and d.date &gt;=#{startTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endTime !=null and endTime != '' ">
			and d.date &lt;#{endTime,jdbcType=TIMESTAMP}
		</if>
		GROUP BY d.date ) t
		ORDER BY t.date DESC
	</select>
	<!-- 用户分析查询统计-htt -->
	
	<!-- 用户属性查询开始-htt -->
	<select id="getByUserAttribute" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT a.date, 
			IFNULL((SELECT COUNT(DISTINCT l.UserID) FROM User_LoginInfo l LEFT JOIN User_Info i ON l.UserID = i.UserID
			LEFT JOIN users u ON i.agent_id = u.id WHERE DATE_FORMAT(l.LoginTime,'%Y-%m-%d') = a.date 
			<if test="agentName != null and agentName !=''">
				and i.agent_id = #{agentName,jdbcType=VARCHAR} 
			</if>
			), 0) dlNum,
			IFNULL((SELECT COUNT(i.UserID) FROM User_Info i WHERE DATE_FORMAT(i.RegisterTime,'%Y-%m-%d') &lt;= a.date 
			<if test="agentName != null and agentName !=''">
				and i.agent_id = #{agentName,jdbcType=VARCHAR} 
			</if>
			), 0) zNum,
			SUM(a.nvNum) nvNum,SUM(a.nNum) nNum,SUM(a.wzNum) wzNum,SUM(a.pgNum) pgNum,SUM(a.azNum) azNum,SUM(a.qtNum) qtNum 
			FROM 
				(SELECT DATE_FORMAT(l.LoginTime,'%Y-%m-%d') DATE,
				IFNULL((SELECT COUNT(DISTINCT l.UserID) FROM DUAL WHERE i.sex = 2), 0) nvNum,
				IFNULL((SELECT COUNT(DISTINCT l.UserID) FROM DUAL WHERE i.sex = 1), 0) nNum,
				IFNULL((SELECT COUNT(DISTINCT l.UserID) FROM DUAL WHERE i.sex = 0), 0) wzNum,
				IFNULL((SELECT COUNT(DISTINCT l.UserID) FROM DUAL WHERE l.LoginFrom = 'iOS'), 0) pgNum,
				IFNULL((SELECT COUNT(DISTINCT l.UserID) FROM DUAL WHERE l.LoginFrom = 'Android'), 0) azNum,
				IFNULL((SELECT COUNT(DISTINCT l.UserID) FROM DUAL WHERE l.LoginFrom != 'Android' AND l.LoginFrom != 'iOS'), 0) qtNum 
				FROM User_LoginInfo l 
				LEFT JOIN User_Info i ON l.UserID = i.UserID
				where 1=1
				<if test="startTime !=null and startTime !='' ">
					and DATE_FORMAT(l.LoginTime,'%Y-%m-%d') &gt;=#{startTime,jdbcType=TIMESTAMP}
				</if>
				<if test="endTime !=null and endTime != '' ">
					and DATE_FORMAT(l.LoginTime,'%Y-%m-%d') &lt;#{endTime,jdbcType=TIMESTAMP}
				</if>
				<if test="agentName != null and agentName !=''">
					and i.agent_id = #{agentName,jdbcType=VARCHAR} 
				</if>
				GROUP BY DATE_FORMAT(l.LoginTime,'%Y-%m-%d'),l.UserID,l.LoginFrom) a
		GROUP BY a.date
		ORDER BY a.date DESC
	
	</select>
	<!-- 用户属性查询结束-htt -->
	
	<!-- 用户属性查询统计开始-htt -->
	<select id="getByUserAttributeCount" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT IFNULL((SELECT COUNT(DISTINCT l.UserID) FROM User_LoginInfo l), 0) dlNum,
			IFNULL((SELECT COUNT(i.UserID) FROM User_Info i), 0) zNum,
			SUM(a.nvNum) nvNum,SUM(a.nNum) nNum,SUM(a.wzNum) wzNum,SUM(a.pgNum) pgNum,SUM(a.azNum) azNum,SUM(a.qtNum) qtNum 
			FROM 
				(SELECT DATE_FORMAT(l.LoginTime,'%Y-%m-%d') DATE,
				IFNULL((SELECT COUNT(DISTINCT l.UserID) FROM DUAL WHERE i.sex = 2), 0) nvNum,
				IFNULL((SELECT COUNT(DISTINCT l.UserID) FROM DUAL WHERE i.sex = 1), 0) nNum,
				IFNULL((SELECT COUNT(DISTINCT l.UserID) FROM DUAL WHERE i.sex = 0), 0) wzNum,
				IFNULL((SELECT COUNT(DISTINCT l.UserID) FROM DUAL WHERE l.LoginFrom = 'iOS'), 0) pgNum,
				IFNULL((SELECT COUNT(DISTINCT l.UserID) FROM DUAL WHERE l.LoginFrom = 'Android'), 0) azNum,
				IFNULL((SELECT COUNT(DISTINCT l.UserID) FROM DUAL WHERE l.LoginFrom != 'Android' AND l.LoginFrom != 'iOS'), 0) qtNum 
				FROM User_LoginInfo l 
				LEFT JOIN User_Info i ON l.UserID = i.UserID
				where 1=1
				<if test="startTime !=null and startTime !='' ">
					and DATE_FORMAT(l.LoginTime,'%Y-%m-%d') &gt;=#{startTime,jdbcType=TIMESTAMP}
				</if>
				<if test="endTime !=null and endTime != '' ">
					and DATE_FORMAT(l.LoginTime,'%Y-%m-%d') &lt;#{endTime,jdbcType=TIMESTAMP}
				</if>
				<if test="agentName != null and agentName !=''">
					and i.agent_id = #{agentName,jdbcType=VARCHAR} 
				</if>
				GROUP BY DATE_FORMAT(l.LoginTime,'%Y-%m-%d'),l.UserID,l.LoginFrom) a
	</select>
	<!-- 用户属性查询统计结束-htt -->

	<select id="getByAll" resultType="com.fx.xzt.sys.model.UserInfoModel"
		parameterType="java.util.Map">
		SELECT l.userName,u.UserID AS userIdString, NickName,
		ProfilePhotoPath, RegisterTime, RegisterFrom, PhoneNo,
		DeliveryAddress,
		RealName, IDCard, IDCardPath,IDCardBackPath, RealNameAuthApplyTime,
		RealNameAuthApproveTime,
		RealNameAuthApproveState,
		RealNameAuthStatus
		FROM User_Info u
		INNER JOIN User_Login l ON u.UserID = l.UserID
		<where>
			<!--<if test="realNameAuthApproveState != null and realNameAuthApproveState!='' 
				"> and u.RealNameAuthApproveState = #{realNameAuthApproveState,jdbcType=VARCHAR} 
				</if> -->
			and u.RealNameAuthApproveState = 0
			<if test="userName != null and userName!='' ">
				and l.UserName = #{userName,jdbcType=VARCHAR}
			</if>
			<if test="realName != null and realName!='' ">
				and RealName = #{realName,jdbcType=VARCHAR}
			</if>
			<if test="applyTimeStart !=null and applyTimeStart !='' ">
				and RealNameAuthApplyTime &gt;=#{applyTimeStart,jdbcType=TIMESTAMP}
			</if>
			<if test="applyTimeEnd !=null and applyTimeEnd != '' ">
				and RealNameAuthApplyTime &lt;=#{applyTimeEnd,jdbcType=TIMESTAMP}
			</if>
		</where>
		order by RealNameAuthApplyTime desc
	</select>
	<update id="editUserInfo" parameterType="com.fx.xzt.sys.entity.UserInfo">
		update User_Info
		<set>
			<if test="nickname != null">
				NickName = #{nickname,jdbcType=VARCHAR},
			</if>
			<if test="profilephotopath != null">
				ProfilePhotoPath = #{profilephotopath,jdbcType=VARCHAR},
			</if>
			<if test="registertime != null">
				RegisterTime = #{registertime,jdbcType=TIMESTAMP},
			</if>
			<if test="registerfrom != null">
				RegisterFrom = #{registerfrom,jdbcType=VARCHAR},
			</if>
			<if test="phoneno != null">
				PhoneNo = #{phoneno,jdbcType=VARCHAR},
			</if>
			<if test="deliveryaddress != null">
				DeliveryAddress = #{deliveryaddress,jdbcType=VARCHAR},
			</if>
			<if test="realname != null">
				RealName = #{realname,jdbcType=VARCHAR},
			</if>
			<if test="idcard != null">
				IDCard = #{idcard,jdbcType=VARCHAR},
			</if>
			<if test="idcardpath != null">
				IDCardPath = #{idcardpath,jdbcType=VARCHAR},
			</if>
			<if test="idcardbackpath != null">
				IDCardBackPath = #{idcardbackpath,jdbcType=VARCHAR},
			</if>
			<if test="realnameauthapplytime != null">
				RealNameAuthApplyTime = #{realnameauthapplytime,jdbcType=TIMESTAMP},
			</if>
			<if test="realnameauthapprovetime != null">
				RealNameAuthApproveTime = #{realnameauthapprovetime,jdbcType=TIMESTAMP},
			</if>
			<if test="realnameauthapprovestate != null">
				RealNameAuthApproveState = #{realnameauthapprovestate,jdbcType=SMALLINT},
			</if>
			<if test="realnameauthstatus != null">
				RealNameAuthStatus = #{realnameauthstatus,jdbcType=SMALLINT},
			</if>
			<if test="agentId != null">
				agent_id = #{agentId,jdbcType=VARCHAR},
			</if>
		  	<if test="brokerId != null">
				broker_id = #{brokerId,jdbcType=VARCHAR},
			</if>

			<if test="attribution != null">
				Attribution = #{attribution,jdbcType=VARCHAR},
			</if>
			<if test="registerIp != null">
				RegisterIp = #{registerIp,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=SMALLINT},
			</if>
		</set>
		where UserID = #{userid,jdbcType=BIGINT}
	</update>
	<!--合作伙伴-获取下级客户信息 tianliya-->
	<select id="getSubClients" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT CAST(u.UserID AS  CHAR ) AS userId,
		<if test='isView == "1"'>
			l.UserName userName,
		</if>
		<if test='isView != "1"'>
			INSERT(l.UserName, 4, 4, '****') userName,
		</if>
		u.NickName nickName, u.RealNameAuthStatus realNameAuthStatus, l.Status AS
		STATUS,u.RealName,u.RegisterTime registerTime,
		u.agent_id AS agentId, ua.user_name AS agentName, u.broker_id AS brokerId,
		u1.user_name AS brokerName ,
		u.IDCard AS idcard,
		(SELECT GROUP_CONCAT(AccountNum) FROM User_BankCard where u.UserID = UserID) accountNum,
		round(a.rmb/100,2) AS rmb,a.finance AS finance,a.frozen_rmb AS frozenRmb,g.total_income AS
		totalIncome,
		g.gold as gold, g.finance_gold financeGold2, round(g.average_price/100,2) averagePrice,
		ifnull(wzj.wzj, 0) financeGold
		<!--, a.frozen_gold as frozenGold -->
		FROM User_Login l
		RIGHT JOIN User_Info u ON u.UserID = l.UserID
		LEFT JOIN users ua ON u.agent_id = ua.id
		LEFT JOIN users u1 ON u.broker_id = u1.id
		LEFT JOIN user_account a ON a.user_id = l.UserID
		left join user_gold_account g on g.user_id = l.UserID
		LEFT JOIN (SELECT user_id, format(sum(gram), 3) wzj from finance_regulargold_order where status = 1 GROUP BY user_id) wzj on wzj.user_id = l.UserID
		<where>
			<!-- and l.Status = 1  -->
			<if test="userName != null and userName != '' ">
				and l.UserName = #{userName,jdbcType=VARCHAR}
			</if>
			<if test="agentsName != null and agentsName !='' ">
				and ua.id = #{agentsName,jdbcType=BIGINT}
			</if>
			<if test="brokerName != null and brokerName !='' ">
				and u1.id = #{brokerName,jdbcType=BIGINT}
			</if>
			<if test="startTime !=null and startTime !='' ">
				and u.RegisterTime &gt;=#{startTime,jdbcType=TIMESTAMP}
			</if>
			<if test="endTime !=null and endTime != '' ">
				and u.RegisterTime &lt;#{endTime,jdbcType=TIMESTAMP}
			</if>
		</where>
		order by RegisterTime DESC
	</select>
	<!--合作伙伴-获取下级客户信息 tianliya-->
	<!--根据代理商获取客户信息 -tianliya-->
	<select id="selectUserInfoByAgentId1" parameterType="java.lang.Long" resultType="java.util.Map">
		select UserID from User_Info where agent_id = #{agentId,jdbcType=BIGINT}
	</select>
	<!--根据经纪人获取客户信息 -tianliya-->
	<select id="selectUserInfoByBrokerId1" parameterType="java.lang.Long" resultType="java.util.Map">
		select UserID from User_Info where broker_id = #{agentId,jdbcType=BIGINT}
	</select>
	<!--下级客户-财产信息统计 tianliya-->
	<select id="getSubClientsAccountCount" resultType="java.util.Map"
			parameterType="java.util.Map">
		SELECT SUM(a.rmb) rmbSum, format(SUM(ga.gold), 3) goldSum, format(SUM(ga.finance_gold), 3) financeGoldSum2,
		format(SUM(ifnull(wzj.wzj, 0)), 3) financeGoldSum,
		SUM(ga.average_price * ga.gold)/SUM(ga.gold) cbj
		FROM User_Login l
		LEFT JOIN User_Info u ON u.UserID = l.UserID
		LEFT JOIN user_account a ON l.UserID = a.user_id
		LEFT JOIN user_gold_account ga ON ga.user_id = l.UserID
		LEFT JOIN users ua ON u.agent_id = ua.id
		LEFT JOIN users ub ON u.broker_id = ub.id
		LEFT JOIN (SELECT user_id, format(sum(gram), 3) wzj from finance_regulargold_order where status = 1 GROUP BY user_id) wzj on wzj.user_id = l.UserID
		<where>
			<!-- and l.Status = 1 -->
			<if test="userName != null and userName != '' ">
				and l.UserName = #{userName,jdbcType=VARCHAR}
			</if>
			<if test="agentsName != null and agentsName !='' ">
				and ua.id = #{agentsName,jdbcType=BIGINT}
			</if>
			<if test="brokerName != null and brokerName !='' ">
				and ub.id = #{brokerName,jdbcType=BIGINT}
			</if>
			<if test="startTime !=null and startTime !='' ">
				and u.RegisterTime &gt;=#{startTime,jdbcType=TIMESTAMP}
			</if>
			<if test="endTime !=null and endTime != '' ">
				and u.RegisterTime &lt;#{endTime,jdbcType=TIMESTAMP}
			</if>
		</where>
	</select>
	<!--下级客户-财产信息 tianliya-->

	<!--修改客户的经济人 tianliya-->
	<update id="updateUserInfoBrokerId" parameterType="java.util.Map">
		update User_Info set broker_id=#{brokerId,jdbcType=BIGINT} where UserID = #{userId,jdbcType=BIGINT}
	</update>
	<update id="alertAgentAndBroker" parameterType="java.util.Map">
		update User_Info 
		<set>
	        <if test="realName != null and realName !=''">
	        	RealName = #{realName,jdbcType=VARCHAR},
	        </if>
	        <if test="idcard != null and idcard !=''">
	        	IDCard = #{idcard,jdbcType=VARCHAR},
	        </if>
	        <if test="brokerId != null and brokerId !=''">
	        	broker_id = #{brokerId,jdbcType=BIGINT},
	        </if>
	        <if test="agentId != null and agentId !=''">
	        	agent_id = #{agentId,jdbcType=BIGINT},
	        </if>
    	</set>
		where UserID = #{userId,jdbcType=BIGINT}
	</update>
	<!--修改客户的经济人 tianliya-->
</mapper>
