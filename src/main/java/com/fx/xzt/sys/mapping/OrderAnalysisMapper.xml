<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fx.xzt.sys.mapper.AnalysisOrderMapper">
  <!--交易分析-tainliya-start-->
  <select id="getAnalysis" resultType="java.util.Map" parameterType="java.util.Map">


    select tmp.* from
    (SELECT t.date date,TRUNCATE(t1.realGoldAmount/100,2) realGoldAmount,t1.realGoldCount,
    TRUNCATE(t2.goldRightAmount/100,2) goldRightAmount,t2.goldRightCount,
    TRUNCATE(t3.financeAmount/100,2) financeAmount,t3.financeCount,
    TRUNCATE(t4.goldUpAmount/100,2) goldUpAmount,t4.goldUpCount
    FROM until_date t
    LEFT JOIN (
          SELECT DATE_FORMAT(rgo.buy_time,'%y-%m-%d') AS realGoldTime, COUNT(distinct rgo.user_id) AS realGoldCount, SUM(rmb_amount) AS realGoldAmount
          FROM real_gold_order rgo
            <where>
              <if test="agentId != null and agentId != '' and agentId == 2">
                AND rgo.agent_id = #{agentId,jdbcType=BIGINT}
              </if>
              <if test="agentId != null and agentId != '' and agentId != 2">
                AND rgo.agent_id != 2
              </if>
            </where>
          GROUP BY DATE_FORMAT(rgo.buy_time,'%m-%d-%Y')
          ) t1
    on t.date=t1.realGoldTime
    left join (
        SELECT DATE_FORMAT(dor.create_time,'%y-%m-%d') AS goldRightTime, COUNT(distinct dor.user_id) AS goldRightCount, SUM(dor.ensure_amount) AS goldRightAmount
        FROM deal_order dor

          <where>
            <if test="agentId != null and agentId != '' and agentId == 2">
              AND dor.agent_id = #{agentId,jdbcType=BIGINT}
            </if>
            <if test="agentId != null and agentId != '' and agentId != 2">
              AND dor.agent_id != 2
            </if>
            <if test="profitLoss != null and profitLoss != ''">
              AND dor.profit_loss = #{profitLoss,jdbcType=INTEGER}
            </if>
            <if test="upOrDown != null and upOrDown != ''">
              AND dor.up_or_down = #{upOrDown,jdbcType=INTEGER}
            </if>
            <if test="orderState != null and upOrDown != ''">
              AND dor.order_state = #{orderState,jdbcType=INTEGER}
            </if>
          </where>
        GROUP BY DATE_FORMAT(dor.create_time,'%m-%d-%Y')
        ) t2
    on t.date = t2.goldRightTime
    left join (
        SELECT DATE_FORMAT(fof.buy_time,'%y-%m-%d') AS financeTime, COUNT(distinct fof.user_id) AS financeCount, SUM(fof.buy_amount) AS financeAmount
        FROM finance_order fof
          <where>
            fof.type = 1
            <if test="agentId != null and agentId != '' and agentId == 2">
              AND fof.agent_id = #{agentId,jdbcType=BIGINT}
            </if>
            <if test="agentId != null and agentId != '' and agentId != 2">
              AND fof.agent_id != 2
            </if>
          </where>
        GROUP BY DATE_FORMAT(fof.buy_time,'%m-%d-%Y')
        ) t3
    on t.date = t3.financeTime
    left join (
        SELECT DATE_FORMAT(fog.buy_time,'%y-%m-%d') AS goldUpTime, COUNT(distinct fog.user_id) AS goldUpCount, SUM(fog.buy_amount) AS goldUpAmount
        FROM finance_order fog

        <where>
            fog.type = 2
          <if test="agentId != null and agentId != '' and agentId == 2">
            AND fog.agent_id = #{agentId,jdbcType=BIGINT}
          </if>
          <if test="agentId != null and agentId != '' and agentId != 2">
            AND fog.agent_id != 2
          </if>
        </where>
        GROUP BY DATE_FORMAT(fog.buy_time,'%m-%d-%Y')
        ) t4
    on t.date = t4.goldUpTime

    <where>
      <if test="startTime != null and startTime != ''">
        AND t.date &gt;= #{startTime,jdbcType=TIMESTAMP}
      </if>
      <if test="endTime != null and endTime != ''">
        AND t.date &lt;= #{endTime,jdbcType=TIMESTAMP}
      </if>
    </where>
    ORDER BY t.date desc
    ) tmp
    where tmp.realGoldAmount is not null or tmp.goldRightAmount is not null or tmp.financeAmount is not null or goldUpAmount is not null
    limit #{start}, #{size}
  </select>
  <!--交易分析-tianliya-end-->


  <!--导出交易分析-tainliya-start-->
  <select id="exportAnalysis" resultType="java.util.Map" parameterType="java.util.Map">

    select tmp.* from
    (SELECT t.date date,TRUNCATE(t1.realGoldAmount/100,2) realGoldAmount,t1.realGoldCount,
    TRUNCATE(t2.goldRightAmount/100,2) goldRightAmount,t2.goldRightCount,
    TRUNCATE(t3.financeAmount/100,2) financeAmount,t3.financeCount,
    TRUNCATE(t4.goldUpAmount/100,2) goldUpAmount,t4.goldUpCount
    FROM until_date t
    LEFT JOIN (
    SELECT DATE_FORMAT(rgo.buy_time,'%y-%m-%d') AS realGoldTime, COUNT(distinct rgo.user_id) AS realGoldCount, SUM(rmb_amount) AS realGoldAmount
    FROM real_gold_order rgo

    <where>
      <if test="agentId != null and agentId != '' and agentId == 2">
        AND rgo.agent_id = #{agentId,jdbcType=BIGINT}
      </if>
      <if test="agentId != null and agentId != '' and agentId != 2">
        AND rgo.agent_id != 2
      </if>
    </where>
    GROUP BY DATE_FORMAT(rgo.buy_time,'%m-%d-%Y')
    ) t1
    on t.date=t1.realGoldTime
    left join (
    SELECT DATE_FORMAT(dor.create_time,'%y-%m-%d') AS goldRightTime, COUNT(distinct dor.user_id) AS goldRightCount, SUM(dor.ensure_amount) AS goldRightAmount
    FROM deal_order dor

    <where>
      <if test="agentId != null and agentId != '' and agentId == 2">
        AND dor.agent_id = #{agentId,jdbcType=BIGINT}
      </if>
      <if test="agentId != null and agentId != '' and agentId != 2">
        AND dor.agent_id != 2
      </if>
      <if test="profitLoss != null and profitLoss != ''">
        AND dor.profit_loss = #{profitLoss,jdbcType=INTEGER}
      </if>
      <if test="upOrDown != null and upOrDown != ''">
        AND dor.up_or_down = #{upOrDown,jdbcType=INTEGER}
      </if>
      <if test="orderState != null and upOrDown != ''">
        AND dor.order_state = #{orderState,jdbcType=INTEGER}
      </if>
    </where>
    GROUP BY DATE_FORMAT(dor.create_time,'%m-%d-%Y')
    ) t2
    on t.date = t2.goldRightTime
    left join (
    SELECT DATE_FORMAT(fof.buy_time,'%y-%m-%d') AS financeTime, COUNT(distinct fof.user_id) AS financeCount, SUM(fof.buy_amount) AS financeAmount
    FROM finance_order fof

    <where>
      fof.type = 1
      <if test="agentId != null and agentId != '' and agentId == 2">
        AND fof.agent_id = #{agentId,jdbcType=BIGINT}
      </if>
      <if test="agentId != null and agentId != '' and agentId != 2">
        AND fof.agent_id != 2
      </if>
    </where>
    GROUP BY DATE_FORMAT(fof.buy_time,'%m-%d-%Y')
    ) t3
    on t.date = t3.financeTime
    left join (
    SELECT DATE_FORMAT(fog.buy_time,'%y-%m-%d') AS goldUpTime, COUNT(distinct fog.user_id) AS goldUpCount, SUM(fog.buy_amount) AS goldUpAmount
    FROM finance_order fog

    <where>
      fog.type = 2
      <if test="agentId != null and agentId != '' and agentId == 2">
        AND fog.agent_id = #{agentId,jdbcType=BIGINT}
      </if>
      <if test="agentId != null and agentId != '' and agentId != 2">
        AND fog.agent_id != 2
      </if>
    </where>
    GROUP BY DATE_FORMAT(fog.buy_time,'%m-%d-%Y')
    ) t4
    on t.date = t4.goldUpTime

    <where>
      <if test="startTime != null and startTime != ''">
        AND t.date &gt;= #{startTime,jdbcType=TIMESTAMP}
      </if>
      <if test="endTime != null and endTime != ''">
        AND t.date &lt;= #{endTime,jdbcType=TIMESTAMP}
      </if>
    </where>
    ORDER BY t.date desc
    ) tmp
    where tmp.realGoldAmount is not null or tmp.goldRightAmount is not null or tmp.financeAmount is not null or goldUpAmount is not null
  </select>
  <!--交易分析-tianliya-end-->
  <!--交易分析统计 tianliya-->
  <select id="getAnalysisCount" resultType="java.util.Map" parameterType="java.util.Map">

    SELECT  TRUNCATE(sum(a.realGoldAmount)/100,2) realGoldAmountTotal,sum(a.realGoldCount) realGoldCountTotal,
    TRUNCATE(sum(a.goldRightAmount)/100,2) goldRightAmountTotal,sum(a.goldRightCount) goldRightCountTotal,
    TRUNCATE(sum(a.financeAmount)/100,2) financeAmountTotal,sum(a.financeCount) financeCountTotal,
    TRUNCATE(sum(a.goldUpAmount)/100,2) goldUpAmountTotal,sum(a.goldUpCount) goldUpCountTotal
    FROM
    (SELECT *
    FROM until_date t
    LEFT JOIN (
    SELECT DATE_FORMAT(rgo.buy_time,'%y-%m-%d') AS realGoldTime, COUNT(distinct rgo.user_id) AS realGoldCount, SUM(rmb_amount) AS realGoldAmount
    FROM real_gold_order rgo

    <where>
      <if test="agentId != null and agentId != '' and agentId == 2">
        AND rgo.agent_id = #{agentId,jdbcType=BIGINT}
      </if>
      <if test="agentId != null and agentId != '' and agentId != 2">
        AND rgo.agent_id != 2
      </if>
    </where>
    GROUP BY DATE_FORMAT(rgo.buy_time,'%m-%d-%Y')
    ) t1
    on t.date=t1.realGoldTime
    left join (
    SELECT DATE_FORMAT(dor.create_time,'%y-%m-%d') AS goldRightTime, COUNT(distinct dor.user_id) AS goldRightCount, SUM(dor.ensure_amount) AS goldRightAmount
    FROM deal_order dor

    <where>
      <if test="agentId != null and agentId != '' and agentId == 2">
        AND dor.agent_id = #{agentId,jdbcType=BIGINT}
      </if>
      <if test="agentId != null and agentId != '' and agentId != 2">
        AND dor.agent_id != 2
      </if>
      <if test="profitLoss != null and profitLoss != ''">
        AND dor.profit_loss = #{profitLoss,jdbcType=INTEGER}
      </if>
      <if test="upOrDown != null">
        AND dor.up_or_down = #{upOrDown,jdbcType=INTEGER}
      </if>
      <if test="orderState != null and upOrDown != ''">
        AND dor.order_state = #{orderState,jdbcType=INTEGER}
      </if>
    </where>
    GROUP BY DATE_FORMAT(dor.create_time,'%m-%d-%Y')
    ) t2
    on t.date = t2.goldRightTime
    left join (
    SELECT DATE_FORMAT(fof.buy_time,'%y-%m-%d') AS financeTime, COUNT(distinct fof.user_id) AS financeCount, SUM(fof.buy_amount) AS financeAmount
    FROM finance_order fof

    <where>
      fof.type = 1
      <if test="agentId != null and agentId != '' and agentId == 2">
        AND fof.agent_id = #{agentId,jdbcType=BIGINT}
      </if>
      <if test="agentId != null and agentId != '' and agentId != 2">
        AND fof.agent_id != 2
      </if>
    </where>
    GROUP BY DATE_FORMAT(fof.buy_time,'%m-%d-%Y')
    ) t3
    on t.date = t3.financeTime
    left join (
    SELECT DATE_FORMAT(fog.buy_time,'%y-%m-%d') AS goldUpTime, COUNT(distinct fog.user_id) AS goldUpCount, SUM(fog.buy_amount) AS goldUpAmount
    FROM finance_order fog

    <where>
      fog.type = 2
      <if test="agentId != null and agentId != '' and agentId == 2">
        AND fog.agent_id = #{agentId,jdbcType=BIGINT}
      </if>
      <if test="agentId != null and agentId != '' and agentId != 2">
        AND fog.agent_id != 2
      </if>
    </where>
    GROUP BY DATE_FORMAT(fog.buy_time,'%m-%d-%Y')
    ) t4
    on t.date = t4.goldUpTime

    <where>

      <if test="startTime != null and startTime != ''">
        AND t.date &gt;= #{startTime,jdbcType=TIMESTAMP}
      </if>
      <if test="endTime != null and endTime != ''">
        AND t.date &lt;= #{endTime,jdbcType=TIMESTAMP}
      </if>
    </where>
    ORDER BY t.date desc) a

  </select>
  <!--交易分析统计 tianliya-->
  <!--交易分析的总条数 tianliya-->
  <select id="getTotal" resultType="java.lang.Integer" parameterType="java.util.Map">

    SELECT count(tmp.date) total from
    (select *
    FROM until_date t
    LEFT JOIN (
    SELECT DATE_FORMAT(rgo.buy_time,'%y-%m-%d') AS realGoldTime, COUNT(distinct rgo.user_id) AS realGoldCount,
    SUM(rmb_amount) AS realGoldAmount
    FROM real_gold_order rgo

    <where>
      <if test="agentId != null and agentId != '' and agentId == 2">
        AND rgo.agent_id = #{agentId,jdbcType=BIGINT}
      </if>
      <if test="agentId != null and agentId != '' and agentId != 2">
        AND rgo.agent_id != 2
      </if>
    </where>
    GROUP BY DATE_FORMAT(rgo.buy_time,'%m-%d-%Y')
    ) t1
    on t.date=t1.realGoldTime
    left join (
    SELECT DATE_FORMAT(dor.create_time,'%y-%m-%d') AS goldRightTime, COUNT(distinct dor.user_id) AS goldRightCount,
    SUM(dor.ensure_amount) AS goldRightAmount
    FROM deal_order dor

    <where>
      <if test="agentId != null and agentId != '' and agentId == 2">
        AND dor.agent_id = #{agentId,jdbcType=BIGINT}
      </if>
      <if test="agentId != null and agentId != '' and agentId != 2">
        AND dor.agent_id != 2
      </if>
      <if test="profitLoss != null and profitLoss != ''">
        AND dor.profit_loss = #{profitLoss,jdbcType=INTEGER}
      </if>
      <if test="upOrDown != null and upOrDown != ''">
        AND dor.up_or_down = #{upOrDown,jdbcType=INTEGER}
      </if>
      <if test="orderState != null and upOrDown != ''">
        AND dor.order_state = #{orderState,jdbcType=INTEGER}
      </if>
    </where>
    GROUP BY DATE_FORMAT(dor.create_time,'%m-%d-%Y')
    ) t2
    on t.date = t2.goldRightTime
    left join (
    SELECT DATE_FORMAT(fof.buy_time,'%y-%m-%d') AS financeTime, COUNT(distinct fof.user_id) AS financeCount,
    SUM(fof.buy_amount) AS financeAmount
    FROM finance_order fof

    <where>
      fof.type = 1
      <if test="agentId != null and agentId != '' and agentId == 2">
        AND fof.agent_id = #{agentId,jdbcType=BIGINT}
      </if>
      <if test="agentId != null and agentId != '' and agentId != 2">
        AND fof.agent_id != 2
      </if>
    </where>
    GROUP BY DATE_FORMAT(fof.buy_time,'%m-%d-%Y')
    ) t3
    on t.date = t3.financeTime
    left join (
    SELECT DATE_FORMAT(fog.buy_time,'%y-%m-%d') AS goldUpTime, COUNT(distinct fog.user_id) AS goldUpCount,
    SUM(fog.buy_amount) AS goldUpAmount
    FROM finance_order fog

    <where>
      fog.type = 2
      <if test="agentId != null and agentId != '' and agentId == 2">
        AND fog.agent_id = #{agentId,jdbcType=BIGINT}
      </if>
      <if test="agentId != null and agentId != '' and agentId != 2">
        AND fog.agent_id != 2
      </if>
    </where>
    GROUP BY DATE_FORMAT(fog.buy_time,'%m-%d-%Y')
    ) t4
    on t.date = t4.goldUpTime
    <where>
      <if test="startTime != null and startTime != ''">
        AND t.date &gt;= #{startTime,jdbcType=TIMESTAMP}
      </if>
      <if test="endTime != null and endTime != ''">
        AND t.date &lt;= #{endTime,jdbcType=TIMESTAMP}
      </if>
    </where>) tmp
    where tmp.realGoldAmount is not null or tmp.goldRightAmount is not null or tmp.financeAmount is not null or goldUpAmount is not null

  </select>
  <!--交易分析的总条数 tianliya-->
</mapper>