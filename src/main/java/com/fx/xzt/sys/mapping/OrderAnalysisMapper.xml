<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fx.xzt.sys.mapper.AnalysisOrderMapper">
  <!--交易分析-tainliya-start-->
  <select id="getAnalysis" resultType="java.util.Map" parameterType="java.util.Map">


      select b.* from (
      select a.date,
          ifnull(a.buyGoldUserAmount,0)+ifnull(a.saleGoldUserAmount,0) goldUserAmount,
          TRUNCATE(a.buyGoldAmount,3) buyGoldAmount,
          TRUNCATE(a.buyRmbAmount/100,2) buyRmbAmount,
          TRUNCATE(a.saleGoldAmount,3) saleGoldAmount,
          TRUNCATE(a.saleRmbAmount/100,2) saleRmbAmount,
      a.goldRightUserAmount,
      TRUNCATE(a.goldRightAmount/100,2) goldRightAmount,
      a.goldDeliveryUserAmount,
      TRUNCATE(a.goldDeliveryAmount/100,2) goldDeliveryAmount,
      a.financeUserAmount buyUserAmount,
      TRUNCATE(a.gram,3) gram,TRUNCATE(a.buyAmount/100,2) buyAmount
      from
      (SELECT *
      FROM until_date t
      LEFT JOIN
      (SELECT DATE_FORMAT(rgo.create_time,'%y-%m-%d') AS buyTime, COUNT(distinct rgo.user_id) AS buyGoldUserAmount, SUM(rgo.amount) AS buyGoldAmount, SUM(rgo.rmb_amount) AS buyRmbAmount
      FROM user_gold_account_record rgo
      <where>
          rgo.type = 1
          <if test="agentId != null and agentId != '' and agentId == 2">
              AND rgo.agent_id = #{agentId,jdbcType=BIGINT}
          </if>
          <if test="agentId != null and agentId != '' and agentId != 2">
              AND rgo.agent_id != 2
          </if>
          <if test="startTime != null and startTime != ''">
              AND rgo.create_time &gt;= #{startTime,jdbcType=TIMESTAMP}
          </if>
          <if test="endTime != null and endTime != ''">
              AND rgo.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
          </if>
      </where>

      GROUP BY DATE_FORMAT(rgo.create_time,'%m-%d-%Y'))t1
      on t.date = t1.buyTime
      left join
      (SELECT DATE_FORMAT(rgo.create_time,'%y-%m-%d') AS saleTime, COUNT(distinct rgo.user_id) AS saleGoldUserAmount, SUM(rgo.amount) AS saleGoldAmount, SUM(rgo.rmb_amount) AS saleRmbAmount
      FROM user_gold_account_record rgo
      <where>
          rgo.type = 4
          <if test="agentId != null and agentId != '' and agentId == 2">
              AND rgo.agent_id = #{agentId,jdbcType=BIGINT}
          </if>
          <if test="agentId != null and agentId != '' and agentId != 2">
              AND rgo.agent_id != 2
          </if>
          <if test="startTime != null and startTime != ''">
              AND rgo.create_time &gt;= #{startTime,jdbcType=TIMESTAMP}
          </if>
          <if test="endTime != null and endTime != ''">
              AND rgo.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
          </if>
      </where>

      GROUP BY DATE_FORMAT(rgo.create_time,'%m-%d-%Y')) t2
      on t.date = t2.saleTime
      left join
      (SELECT DATE_FORMAT(dor.create_time,'%y-%m-%d') AS goldRightTime, if(dor.order_state=3,0,COUNT(distinct dor.user_id)) AS goldRightUserAmount,if(dor.order_state=3,0,SUM(dor.ensure_amount))  AS goldRightAmount
      FROM deal_order dor
      <where>
          <if test='orderState == null or orderState == "".toString()'>
              dor.order_state in (0,1,2)
          </if>

          <if test="startTime != null and startTime != ''">
              AND dor.create_time &gt;= #{startTime,jdbcType=TIMESTAMP}
          </if>
          <if test="endTime != null and endTime != ''">
              AND dor.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
          </if>
          <if test="agentId != null and agentId != '' and agentId == 2">
              AND dor.agent_id = #{agentId,jdbcType=BIGINT}
          </if>
          <if test="agentId != null and agentId != '' and agentId != 2">
              AND dor.agent_id != 2
          </if>
          <if test="profitLoss != null and profitLoss != ''">
              AND dor.profit_loss = #{profitLoss,jdbcType=INTEGER}
          </if>
          <if test="upOrDown != null and upOrDown != ''">
              AND dor.up_or_down = #{upOrDown,jdbcType=INTEGER}
          </if>
          <if test='orderState != null and orderState != "".toString()'>
              AND dor.order_state = #{orderState,jdbcType=INTEGER}
          </if>

      </where>
      GROUP BY DATE_FORMAT(dor.create_time,'%m-%d-%Y')) t3
      on t.date = t3.goldRightTime
      left join
      (SELECT DATE_FORMAT(dor.create_time,'%y-%m-%d') AS goldDeliveryTime, if(dor.order_state=3,COUNT(distinct dor.user_id),0) AS goldDeliveryUserAmount,if(dor.order_state=3,SUM(dor.ensure_amount),0)  AS goldDeliveryAmount
      FROM deal_order dor
      <where>
          <if test='orderState == null or orderState == "".toString()'>
              dor.order_state=3
          </if>

          <if test="startTime != null and startTime != ''">
              AND dor.create_time &gt;= #{startTime,jdbcType=TIMESTAMP}
          </if>
          <if test="endTime != null and endTime != ''">
              AND dor.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
          </if>
          <if test="agentId != null and agentId != '' and agentId == 2">
              AND dor.agent_id = #{agentId,jdbcType=BIGINT}
          </if>
          <if test="agentId != null and agentId != '' and agentId != 2">
              AND dor.agent_id != 2
          </if>
          <if test="profitLoss != null and profitLoss != ''">
              AND dor.profit_loss = #{profitLoss,jdbcType=INTEGER}
          </if>
          <if test="upOrDown != null and upOrDown != ''">
              AND dor.up_or_down = #{upOrDown,jdbcType=INTEGER}
          </if>
          <if test='orderState != null and orderState != "".toString()'>
              AND dor.order_state = #{orderState,jdbcType=INTEGER}
          </if>


      </where>
      GROUP BY DATE_FORMAT(dor.create_time,'%m-%d-%Y')) t5
      on t.date = t5.goldDeliveryTime
      left join
      (SELECT DATE_FORMAT(fof.buy_time,'%y-%m-%d') AS buyTime1, COUNT(distinct fof.user_id) AS financeUserAmount, SUM(fof.gram) AS gram,SUM(fof.buy_amount) AS buyAmount
      FROM finance_regulargold_order fof
      <where>
          fof.buy_type = 1
          <if test="agentId != null and agentId != '' and agentId == 2">
              AND fof.agent_id = #{agentId,jdbcType=BIGINT}
          </if>
          <if test="agentId != null and agentId != '' and agentId != 2">
              AND fof.agent_id != 2
          </if>
          <if test="startTime != null and startTime != ''">
              AND fof.buy_time &gt;= #{startTime,jdbcType=TIMESTAMP}
          </if>
          <if test="endTime != null and endTime != ''">
              AND fof.buy_time &lt;= #{endTime,jdbcType=TIMESTAMP}
          </if>
      </where>
      GROUP BY DATE_FORMAT(fof.buy_time,'%m-%d-%Y'))t4
      on t.date = t4.buyTime1
      ) a ) b
      where
      b.goldUserAmount !=0 or b.goldRightUserAmount  is not null or b.goldDeliveryUserAmount is not null or b.buyUserAmount is not null
      order by b.date desc
    limit #{start}, #{size}
  </select>
  <!--交易分析-tianliya-end-->


  <!--导出交易分析-tainliya-start-->
  <select id="exportAnalysis" resultType="java.util.Map" parameterType="java.util.Map">

      select b.* from (
      select a.date,
      ifnull(a.buyGoldUserAmount,0)+ifnull(a.saleGoldUserAmount,0) goldUserAmount,
      TRUNCATE(a.buyGoldAmount,3) buyGoldAmount,
      TRUNCATE(a.buyRmbAmount/100,2) buyRmbAmount,
      TRUNCATE(a.saleGoldAmount,3) saleGoldAmount,
      TRUNCATE(a.saleRmbAmount/100,2) saleRmbAmount,
      a.goldRightUserAmount,
      TRUNCATE(a.goldRightAmount/100,2) goldRightAmount,
      a.goldDeliveryUserAmount,
      TRUNCATE(a.goldDeliveryAmount/100,2) goldDeliveryAmount,
      a.financeUserAmount buyUserAmount,
      TRUNCATE(a.gram,3) gram,TRUNCATE(a.buyAmount/100,2) buyAmount
      from
      (SELECT *
      FROM until_date t
      LEFT JOIN
      (SELECT DATE_FORMAT(rgo.create_time,'%y-%m-%d') AS buyTime, COUNT(distinct rgo.user_id) AS buyGoldUserAmount, SUM(rgo.amount) AS buyGoldAmount, SUM(rgo.rmb_amount) AS buyRmbAmount
      FROM user_gold_account_record rgo
      <where>
          rgo.type = 1
          <if test="agentId != null and agentId != '' and agentId == 2">
              AND rgo.agent_id = #{agentId,jdbcType=BIGINT}
          </if>
          <if test="agentId != null and agentId != '' and agentId != 2">
              AND rgo.agent_id != 2
          </if>
          <if test="startTime != null and startTime != ''">
              AND rgo.create_time &gt;= #{startTime,jdbcType=TIMESTAMP}
          </if>
          <if test="endTime != null and endTime != ''">
              AND rgo.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
          </if>
      </where>

      GROUP BY DATE_FORMAT(rgo.create_time,'%m-%d-%Y'))t1
      on t.date = t1.buyTime
      left join
      (SELECT DATE_FORMAT(rgo.create_time,'%y-%m-%d') AS saleTime, COUNT(distinct rgo.user_id) AS saleGoldUserAmount, SUM(rgo.amount) AS saleGoldAmount, SUM(rgo.rmb_amount) AS saleRmbAmount
      FROM user_gold_account_record rgo
      <where>
          rgo.type = 4
          <if test="agentId != null and agentId != '' and agentId == 2">
              AND rgo.agent_id = #{agentId,jdbcType=BIGINT}
          </if>
          <if test="agentId != null and agentId != '' and agentId != 2">
              AND rgo.agent_id != 2
          </if>
          <if test="startTime != null and startTime != ''">
              AND rgo.create_time &gt;= #{startTime,jdbcType=TIMESTAMP}
          </if>
          <if test="endTime != null and endTime != ''">
              AND rgo.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
          </if>
      </where>

      GROUP BY DATE_FORMAT(rgo.create_time,'%m-%d-%Y')) t2
      on t.date = t2.saleTime
      left join
      (SELECT DATE_FORMAT(dor.create_time,'%y-%m-%d') AS goldRightTime, if(dor.order_state=3,0,COUNT(distinct dor.user_id)) AS goldRightUserAmount,if(dor.order_state=3,0,SUM(dor.ensure_amount))  AS goldRightAmount
      FROM deal_order dor
      <where>
          <if test='orderState == null or orderState == "".toString()'>
              dor.order_state in (0,1,2)
          </if>

          <if test="startTime != null and startTime != ''">
              AND dor.create_time &gt;= #{startTime,jdbcType=TIMESTAMP}
          </if>
          <if test="endTime != null and endTime != ''">
              AND dor.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
          </if>
          <if test="agentId != null and agentId != '' and agentId == 2">
              AND dor.agent_id = #{agentId,jdbcType=BIGINT}
          </if>
          <if test="agentId != null and agentId != '' and agentId != 2">
              AND dor.agent_id != 2
          </if>
          <if test="profitLoss != null and profitLoss != ''">
              AND dor.profit_loss = #{profitLoss,jdbcType=INTEGER}
          </if>
          <if test="upOrDown != null and upOrDown != ''">
              AND dor.up_or_down = #{upOrDown,jdbcType=INTEGER}
          </if>
          <if test='orderState != null and orderState != "".toString()'>
              AND dor.order_state = #{orderState,jdbcType=INTEGER}
          </if>

      </where>
      GROUP BY DATE_FORMAT(dor.create_time,'%m-%d-%Y')) t3
      on t.date = t3.goldRightTime
      left join
      (SELECT DATE_FORMAT(dor.create_time,'%y-%m-%d') AS goldDeliveryTime, if(dor.order_state=3,COUNT(distinct dor.user_id),0) AS goldDeliveryUserAmount,if(dor.order_state=3,SUM(dor.ensure_amount),0)  AS goldDeliveryAmount
      FROM deal_order dor
      <where>
          <if test='orderState == null or orderState == "".toString()'>
              dor.order_state=3
          </if>

          <if test="startTime != null and startTime != ''">
              AND dor.create_time &gt;= #{startTime,jdbcType=TIMESTAMP}
          </if>
          <if test="endTime != null and endTime != ''">
              AND dor.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
          </if>
          <if test="agentId != null and agentId != '' and agentId == 2">
              AND dor.agent_id = #{agentId,jdbcType=BIGINT}
          </if>
          <if test="agentId != null and agentId != '' and agentId != 2">
              AND dor.agent_id != 2
          </if>
          <if test="profitLoss != null and profitLoss != ''">
              AND dor.profit_loss = #{profitLoss,jdbcType=INTEGER}
          </if>
          <if test="upOrDown != null and upOrDown != ''">
              AND dor.up_or_down = #{upOrDown,jdbcType=INTEGER}
          </if>
          <if test='orderState != null and orderState != "".toString()'>
              AND dor.order_state = #{orderState,jdbcType=INTEGER}
          </if>


      </where>
      GROUP BY DATE_FORMAT(dor.create_time,'%m-%d-%Y')) t5
      on t.date = t5.goldDeliveryTime
      left join
      (SELECT DATE_FORMAT(fof.buy_time,'%y-%m-%d') AS buyTime1, COUNT(distinct fof.user_id) AS financeUserAmount, SUM(fof.gram) AS gram,SUM(fof.buy_amount) AS buyAmount
      FROM finance_regulargold_order fof
      <where>
          fof.buy_type = 1
          <if test="agentId != null and agentId != '' and agentId == 2">
              AND fof.agent_id = #{agentId,jdbcType=BIGINT}
          </if>
          <if test="agentId != null and agentId != '' and agentId != 2">
              AND fof.agent_id != 2
          </if>
          <if test="startTime != null and startTime != ''">
              AND fof.buy_time &gt;= #{startTime,jdbcType=TIMESTAMP}
          </if>
          <if test="endTime != null and endTime != ''">
              AND fof.buy_time &lt;= #{endTime,jdbcType=TIMESTAMP}
          </if>
      </where>
      GROUP BY DATE_FORMAT(fof.buy_time,'%m-%d-%Y'))t4
      on t.date = t4.buyTime1
      ) a ) b
      where
      b.goldUserAmount !=0 or b.goldRightUserAmount  is not null or b.goldDeliveryUserAmount is not null or b.buyUserAmount is not null
      order by b.date desc
  </select>
  <!--交易分析-tianliya-end-->
  <!--交易分析统计 tianliya-->
  <select id="getAnalysisCount" resultType="java.util.Map" parameterType="java.util.Map">

    select
    TRUNCATE(sum(a.buyRmbAmount)/100,2) buyRmbAmount,sum(a.buyGoldUserAmount) buyGoldUserAmount,SUM(a.buyGoldAmount) buyGoldAmount,
    TRUNCATE(sum(a.saleRmbAmount)/100,2) saleRmbAmount,sum(a.saleGoldUserAmount) saleGoldUserAmount,SUM(a.saleGoldAmount) saleGoldAmount,
    TRUNCATE(sum(a.goldRightAmount)/100,2) goldRightAmount,sum(a.goldRightUserAmount) goldRightUserAmount,
    TRUNCATE(sum(a.goldDeliveryAmount)/100,2) goldDeliveryAmount,sum(a.goldDeliveryUserAmount) goldDeliveryUserAmount,
    TRUNCATE(sum(a.buyAmount)/100,2) buyAmount,sum(a.financeUserAmount) financeUserAmount,sum(a.gram) gram
    from
    (SELECT *
    FROM until_date t
    LEFT JOIN
    (SELECT DATE_FORMAT(rgo.create_time,'%y-%m-%d') AS buyTime, COUNT(distinct rgo.user_id) AS buyGoldUserAmount, SUM(rgo.amount) AS buyGoldAmount, SUM(rgo.rmb_amount) AS buyRmbAmount
    FROM save_gold_record rgo
    <where>
      rgo.type = 1
      <if test="agentId != null and agentId != '' and agentId == 2">
        AND rgo.agent_id = #{agentId,jdbcType=BIGINT}
      </if>
      <if test="agentId != null and agentId != '' and agentId != 2">
        AND rgo.agent_id != 2
      </if>
        <if test="startTime != null and startTime != ''">
            AND rgo.create_time &gt;= #{startTime,jdbcType=TIMESTAMP}
        </if>
        <if test="endTime != null and endTime != ''">
            AND rgo.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
        </if>
    </where>
    GROUP BY DATE_FORMAT(rgo.create_time,'%m-%d-%Y'))t1
    on t.date = t1.buyTime
    left join
    (SELECT DATE_FORMAT(rgo.create_time,'%y-%m-%d') AS saleTime, COUNT(distinct rgo.user_id) AS saleGoldUserAmount, SUM(rgo.amount) AS saleGoldAmount, SUM(rgo.rmb_amount) AS saleRmbAmount
    FROM save_gold_record rgo
    <where>
      rgo.type = 4
      <if test="agentId != null and agentId != '' and agentId == 2">
        AND rgo.agent_id = #{agentId,jdbcType=BIGINT}
      </if>
      <if test="agentId != null and agentId != '' and agentId != 2">
        AND rgo.agent_id != 2
      </if>
        <if test="startTime != null and startTime != ''">
            AND rgo.create_time &gt;= #{startTime,jdbcType=TIMESTAMP}
        </if>
        <if test="endTime != null and endTime != ''">
            AND rgo.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
        </if>
    </where>
    GROUP BY DATE_FORMAT(rgo.create_time,'%m-%d-%Y')) t2
    on t.date = t2.saleTime
    left join
    (SELECT DATE_FORMAT(dor.create_time,'%y-%m-%d') AS goldRightTime, if(dor.order_state=3,0,COUNT(distinct dor.user_id)) AS goldRightUserAmount, if(dor.order_state=3,0,SUM(dor.ensure_amount)) AS goldRightAmount
    FROM deal_order dor
    <where>
        <if test='orderState == null or orderState == "".toString()'>
            dor.order_state in (0,1,2)
        </if>

      <if test="agentId != null and agentId != '' and agentId == 2">
        AND dor.agent_id = #{agentId,jdbcType=BIGINT}
      </if>
      <if test="agentId != null and agentId != '' and agentId != 2">
        AND dor.agent_id != 2
      </if>
      <if test="profitLoss != null and profitLoss != ''">
        AND dor.profit_loss = #{profitLoss,jdbcType=INTEGER}
      </if>
      <if test="upOrDown != null">
        AND dor.up_or_down = #{upOrDown,jdbcType=INTEGER}
      </if>
      <if test='orderState != null and orderState != "".toString()'>
        AND dor.order_state = #{orderState,jdbcType=INTEGER}
      </if>
      <if test="startTime != null and startTime != ''">
            AND dor.create_time &gt;= #{startTime,jdbcType=TIMESTAMP}
      </if>
      <if test="endTime != null and endTime != ''">
            AND dor.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
      </if>
    </where>
    GROUP BY DATE_FORMAT(dor.create_time,'%m-%d-%Y')) t3
    on t.date = t3.goldRightTime
    left join
      (SELECT DATE_FORMAT(dor.create_time,'%y-%m-%d') AS goldDeliveryTime, if(dor.order_state=3,COUNT(distinct dor.user_id),0) AS goldDeliveryUserAmount,if(dor.order_state=3, SUM(dor.ensure_amount),0) AS goldDeliveryAmount
      FROM deal_order dor
      <where>
          <if test='orderState == null or orderState == "".toString()'>
              dor.order_state = 3
          </if>

          <if test="agentId != null and agentId != '' and agentId == 2">
              AND dor.agent_id = #{agentId,jdbcType=BIGINT}
          </if>
          <if test="agentId != null and agentId != '' and agentId != 2">
              AND dor.agent_id != 2
          </if>
          <if test="profitLoss != null and profitLoss != ''">
              AND dor.profit_loss = #{profitLoss,jdbcType=INTEGER}
          </if>
          <if test="upOrDown != null">
              AND dor.up_or_down = #{upOrDown,jdbcType=INTEGER}
          </if>
          <if test='orderState != null and orderState != "".toString()'>
              AND dor.order_state = #{orderState,jdbcType=INTEGER}
          </if>
          <if test="startTime != null and startTime != ''">
              AND dor.create_time &gt;= #{startTime,jdbcType=TIMESTAMP}
          </if>
          <if test="endTime != null and endTime != ''">
              AND dor.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
          </if>
      </where>
      GROUP BY DATE_FORMAT(dor.create_time,'%m-%d-%Y')) t5
      on t.date = t5.goldDeliveryTime
      left join
    (SELECT DATE_FORMAT(fof.buy_time,'%y-%m-%d') AS buyTime1, COUNT(distinct fof.user_id) AS financeUserAmount, SUM(fof.buy_amount) AS buyAmount ,sum(fof.gram) AS gram
    FROM finance_regulargold_order fof
    <where>
      fof.buy_type = 1
      <if test="agentId != null and agentId != '' and agentId == 2">
        AND fof.agent_id = #{agentId,jdbcType=BIGINT}
      </if>
      <if test="agentId != null and agentId != '' and agentId != 2">
        AND fof.agent_id != 2
      </if>
        <if test="startTime != null and startTime != ''">
            AND fof.buy_time &gt;= #{startTime,jdbcType=TIMESTAMP}
        </if>
        <if test="endTime != null and endTime != ''">
            AND fof.buy_time &lt;= #{endTime,jdbcType=TIMESTAMP}
        </if>
    </where>
    GROUP BY DATE_FORMAT(fof.buy_time,'%m-%d-%Y'))t4
    on t.date = t4.buyTime1) a
  </select>
  <!--交易分析统计 tianliya-->
  <!--交易分析的总条数 tianliya-->
  <select id="getTotal" resultType="java.lang.Integer" parameterType="java.util.Map">

      select count(b.date) from (
      select a.date,ifnull(a.buyGoldUserAmount,0)+ifnull(a.saleGoldUserAmount,0) goldUserAmount,
      TRUNCATE(a.buyGoldAmount,3) buyGoldAmount, TRUNCATE(a.buyRmbAmount/100,2) buyRmbAmount,
      TRUNCATE(a.saleGoldAmount,3) saleGoldAmount,TRUNCATE(a.saleRmbAmount/100,2) saleRmbAmount,
      a.goldRightUserAmount,TRUNCATE(a.goldRightAmount/100,2) goldRightAmount,
      a.goldDeliveryUserAmount,TRUNCATE(a.goldDeliveryAmount/100,2) goldDeliveryAmount,
      a.financeUserAmount buyUserAmount, TRUNCATE(a.gram,3) gram,TRUNCATE(a.buyAmount/100,2) buyAmount
      from
      (SELECT *
      FROM until_date t
      LEFT JOIN
      (SELECT DATE_FORMAT(rgo.create_time,'%y-%m-%d') AS buyTime, COUNT(distinct rgo.user_id) AS buyGoldUserAmount, SUM(rgo.amount) AS buyGoldAmount, SUM(rgo.rmb_amount) AS buyRmbAmount
      FROM user_gold_account_record rgo
      <where>
          rgo.type = 1
          <if test="agentId != null and agentId != '' and agentId == 2">
              AND rgo.agent_id = #{agentId,jdbcType=BIGINT}
          </if>
          <if test="agentId != null and agentId != '' and agentId != 2">
              AND rgo.agent_id != 2
          </if>
          <if test="startTime != null and startTime != ''">
              AND rgo.create_time &gt;= #{startTime,jdbcType=TIMESTAMP}
          </if>
          <if test="endTime != null and endTime != ''">
              AND rgo.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
          </if>
      </where>

      GROUP BY DATE_FORMAT(rgo.create_time,'%m-%d-%Y'))t1
      on t.date = t1.buyTime
      left join
      (SELECT DATE_FORMAT(rgo.create_time,'%y-%m-%d') AS saleTime, COUNT(distinct rgo.user_id) AS saleGoldUserAmount, SUM(rgo.amount) AS saleGoldAmount, SUM(rgo.rmb_amount) AS saleRmbAmount
      FROM user_gold_account_record rgo
      <where>
          rgo.type = 4
          <if test="agentId != null and agentId != '' and agentId == 2">
              AND rgo.agent_id = #{agentId,jdbcType=BIGINT}
          </if>
          <if test="agentId != null and agentId != '' and agentId != 2">
              AND rgo.agent_id != 2
          </if>
          <if test="startTime != null and startTime != ''">
              AND rgo.create_time &gt;= #{startTime,jdbcType=TIMESTAMP}
          </if>
          <if test="endTime != null and endTime != ''">
              AND rgo.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
          </if>
      </where>

      GROUP BY DATE_FORMAT(rgo.create_time,'%m-%d-%Y')) t2
      on t.date = t2.saleTime
      left join
      (SELECT DATE_FORMAT(dor.create_time,'%y-%m-%d') AS goldRightTime, COUNT(distinct dor.user_id) AS goldRightUserAmount, SUM(dor.ensure_amount) AS goldRightAmount
      FROM deal_order dor
      <where>
          dor.order_state in (0,1,2)
          <if test="startTime != null and startTime != ''">
              AND dor.create_time &gt;= #{startTime,jdbcType=TIMESTAMP}
          </if>
          <if test="endTime != null and endTime != ''">
              AND dor.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
          </if>
          <if test="agentId != null and agentId != '' and agentId == 2">
              AND dor.agent_id = #{agentId,jdbcType=BIGINT}
          </if>
          <if test="agentId != null and agentId != '' and agentId != 2">
              AND dor.agent_id != 2
          </if>
          <if test="profitLoss != null and profitLoss != ''">
              AND dor.profit_loss = #{profitLoss,jdbcType=INTEGER}
          </if>
          <if test="upOrDown != null and upOrDown != ''">
              AND dor.up_or_down = #{upOrDown,jdbcType=INTEGER}
          </if>
          <if test='orderState != null and orderState != "".toString()'>
              AND dor.order_state = #{orderState,jdbcType=INTEGER}
          </if>

      </where>
      GROUP BY DATE_FORMAT(dor.create_time,'%m-%d-%Y')) t3
      on t.date = t3.goldRightTime
      left join
      (SELECT DATE_FORMAT(dor.create_time,'%y-%m-%d') AS goldDeliveryTime, COUNT(distinct dor.user_id) AS goldDeliveryUserAmount, SUM(dor.ensure_amount) AS goldDeliveryAmount
      FROM deal_order dor
      <where>
          dor.order_state=3
          <!--<choose>
              <when test="orderState != null and orderState != ''.toString() ">
                  <choose>
                      <when test="orderState=3">
                          orderState=3
                      </when>
                      <otherwise>
                          1!=1
                      </otherwise>
                  </choose>
              </when>
              <otherwise>
                  dor.order_state=3
              </otherwise>
          </choose>-->
          <if test="startTime != null and startTime != ''">
              AND dor.create_time &gt;= #{startTime,jdbcType=TIMESTAMP}
          </if>
          <if test="endTime != null and endTime != ''">
              AND dor.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
          </if>
          <if test="agentId != null and agentId != '' and agentId == 2">
              AND dor.agent_id = #{agentId,jdbcType=BIGINT}
          </if>
          <if test="agentId != null and agentId != '' and agentId != 2">
              AND dor.agent_id != 2
          </if>
          <if test="profitLoss != null and profitLoss != ''">
              AND dor.profit_loss = #{profitLoss,jdbcType=INTEGER}
          </if>
          <if test="upOrDown != null and upOrDown != ''">
              AND dor.up_or_down = #{upOrDown,jdbcType=INTEGER}
          </if>
          <if test='orderState != null and orderState != "".toString()'>
              AND dor.order_state = #{orderState,jdbcType=INTEGER}
          </if>


      </where>
      GROUP BY DATE_FORMAT(dor.create_time,'%m-%d-%Y')) t5
      on t.date = t5.goldDeliveryTime
      left join
      (SELECT DATE_FORMAT(fof.buy_time,'%y-%m-%d') AS buyTime1, COUNT(distinct fof.user_id) AS financeUserAmount, SUM(fof.gram) AS gram,SUM(fof.buy_amount) AS buyAmount
      FROM finance_regulargold_order fof
      <where>
          fof.buy_type = 1
          <if test="agentId != null and agentId != '' and agentId == 2">
              AND fof.agent_id = #{agentId,jdbcType=BIGINT}
          </if>
          <if test="agentId != null and agentId != '' and agentId != 2">
              AND fof.agent_id != 2
          </if>
          <if test="startTime != null and startTime != ''">
              AND fof.buy_time &gt;= #{startTime,jdbcType=TIMESTAMP}
          </if>
          <if test="endTime != null and endTime != ''">
              AND fof.buy_time &lt;= #{endTime,jdbcType=TIMESTAMP}
          </if>
      </where>
      GROUP BY DATE_FORMAT(fof.buy_time,'%m-%d-%Y'))t4
      on t.date = t4.buyTime1
      ) a ) b
      where
      b.goldUserAmount !=0 or b.goldRightUserAmount  is not null or b.goldDeliveryUserAmount is not null or b.buyUserAmount is not null

  </select>
  <!--交易分析的总条数 tianliya-->
</mapper>