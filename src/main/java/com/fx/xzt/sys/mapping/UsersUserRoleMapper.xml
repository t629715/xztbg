<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fx.xzt.sys.mapper.UsersUserRoleMapper" >
  <resultMap id="BaseResultMap" type="com.fx.xzt.sys.entity.UsersUserRole" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="rid" property="rid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, uid, rid
  </sql>
  <select id="selectByUserId" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
    select rid
    from users_user_role
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <select id="selectByRoleId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from users_user_role
    where rid = #{rid,jdbcType=INTEGER}
  </select>



  <select id="selectByUsersRole" resultType="com.fx.xzt.sys.model.UsersUserRoleModel">
  	<!-- select uid,u.phone uname,group_concat(r.name) as rname
	from users_user_role ur
	inner join users u on u.id = ur.uid
	inner join users_role r on r.id=ur.rid
	group by uid,u.phone
	order by u.create_time desc -->
	select u.id,u.phone as uname,group_concat(r.name) as rname
	from users_role r
	left join users_user_role ur on r.id=ur.rid
	right join users u on u.id = ur.uid
	group by uid,u.phone
	order by u.create_time desc
  </select>
  <select id="selectByRoleUsers" resultType="com.fx.xzt.sys.model.UsersUserRoleModel" parameterType="java.util.Map">
	select r.id,r.name as rname,GROUP_CONCAT(u.phone order by u.phone DESC) as uname,r.create_Time as createTime
	from users_role r
	left join users_user_role ur on r.id=ur.rid
	left join users u on u.id = ur.uid
	<where>
		<if test="phone != null and phone !='' " >
		 and u.phone = #{phone,jdbcType=VARCHAR}
		</if>
		<if test="startTime != null and startTime !=''">
			and r.create_Time &gt;=#{startTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endTime != null and endTime != '' ">
			and r.create_Time &lt;=#{endTime,jdbcType=TIMESTAMP}
		</if>
	</where>
	group by rid,r.name
	order by r.create_Time desc
  </select>
  <insert id="insertUsersUserRole" parameterType="com.fx.xzt.sys.entity.UsersUserRole" useGeneratedKeys="true" keyProperty="id">
    insert into users_user_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        uid,
      </if>
      <if test="rid != null" >
        rid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="rid != null" >
        #{rid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
   <update id="updateByIdSelective" parameterType="com.fx.xzt.sys.entity.UsersUserRole" >
    update users_user_role
    <set >
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="rid != null" >
        rid = #{rid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <delete id="deleteById" parameterType="java.lang.Integer" >
    delete from users_user_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <!--根据角色id删除用户角色对应关系 tianliya 10月23日 修改-->
  <delete id="deleteByUserRole" parameterType="com.fx.xzt.sys.entity.UsersUserRole" >
    delete from users_user_role
    <where>
        <if test="uid != null">
            and uid = #{uid,jdbcType=INTEGER}
        </if>
        <if test="rid != null">
            and rid = #{rid,jdbcType=INTEGER}
        </if>
    </where>
  </delete>
    <!--根据角色id删除用户角色对应关系 tianliya 10月23日 修改-->
  <delete id="deleteByUser" parameterType="java.lang.Integer" >
    delete from users_user_role
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
 <!--  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, uid, rid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.fx.xzt.sys.entity.UsersUserRoleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users_user_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from users_user_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from users_user_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fx.xzt.sys.entity.UsersUserRoleExample" >
    delete from users_user_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fx.xzt.sys.entity.UsersUserRole" >
    insert into users_user_role (id, uid, rid)
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{rid,jdbcType=INTEGER})
  </insert>
  <select id="countByExample" parameterType="com.fx.xzt.sys.entity.UsersUserRoleExample" resultType="java.lang.Integer" >
    select count(*) from users_user_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update users_user_role
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.rid != null" >
        rid = #{record.rid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update users_user_role
    set id = #{record.id,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      rid = #{record.rid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fx.xzt.sys.entity.UsersUserRole" >
    update users_user_role
    set uid = #{uid,jdbcType=INTEGER},
      rid = #{rid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update> -->
</mapper>