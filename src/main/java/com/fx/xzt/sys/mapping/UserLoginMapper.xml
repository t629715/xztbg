<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fx.xzt.sys.mapper.UserLoginMapper" >
  <resultMap id="BaseResultMap" type="com.fx.xzt.sys.entity.UserLogin" >
    <id column="UserID" property="userid" jdbcType="BIGINT" />
    <result column="UserName" property="username" jdbcType="VARCHAR" />
    <result column="Password" property="password" jdbcType="VARCHAR" />
    <result column="Status" property="status" jdbcType="SMALLINT" />
  </resultMap>
    <resultMap id="RegisterResultMap" type="com.fx.xzt.sys.model.UserLoginModel" >
        <result column="UserID" property="userid" jdbcType="BIGINT" />
        <result column="UserName" property="username" jdbcType="VARCHAR" />
        <result column="Status" property="status" jdbcType="SMALLINT" />
        <result column="RegisterTime" property="registerTime" jdbcType="TIMESTAMP" />
        <result column="RegisterFrom" property="registerFrom" jdbcType="VARCHAR" />
        <result column="RegisterIp" property="registerIp" jdbcType="VARCHAR" />
        <result column="attribution" property="attribution" jdbcType="VARCHAR" />
        <result column="lastlogintime" property="lastLoginTime"  jdbcType="TIMESTAMP" />
        <result column="lastloginfrom" property="lastLoginFrom" jdbcType="VARCHAR" />
        <result column="lastfromip" property="lastFromIp" jdbcType="VARCHAR" />
        <result column="agent_id" property="agentsId" jdbcType="BIGINT" />
        <result column="agent_name" property="agentsName" jdbcType="VARCHAR" />
        <result column="broker_id" property="brokerId" jdbcType="BIGINT" />
        <result column="broker_name" property="brokerName" jdbcType="VARCHAR" />
    </resultMap>
    <!--注册信息查询开始-htt-->
    <select id="getByRegisterMessage" resultType="java.util.Map" parameterType="java.util.Map" >
        SELECT l.UserID , l.UserName ,i.agent_id agentId, u.user_name agentName, i.broker_id brokerId, u1.user_name brokerName ,
        l.Status ,i.RegisterTime, i.RegisterFrom, i.RegisterIp, i.attribution,
        m.lastlogintime, m.lastloginfrom, m.lastfromip
        FROM User_Login l LEFT JOIN User_Info i ON l.UserID = i.UserID
        LEFT JOIN users u ON i.agent_id = u.id
        LEFT JOIN users u1 ON i.broker_id = u1.id
        LEFT JOIN (SELECT userid useridm,MAX(loginTime) lastlogintime,loginFrom lastloginfrom,fromIp lastfromip FROM User_LoginInfo GROUP BY  useridm) m
        ON l.UserID = m.useridm
        <where>
        	and l.Status = 1
            <if test="userName != null and userName != '' ">
                and l.UserName = #{userName,jdbcType=VARCHAR}
            </if>
            <if test="startTime !=null and startTime !='' ">
                and i.RegisterTime &gt;=#{startTime,jdbcType=TIMESTAMP}
            </if>
            <if test="endTime !=null and endTime != '' ">
                and i.RegisterTime &lt;=#{endTime,jdbcType=TIMESTAMP}
            </if>
            <if test="registerFrom != null and registerFrom !='' ">
                and i.RegisterFrom = #{registerFrom,jdbcType=VARCHAR}
            </if>
            <if test="registerIp != null and registerIp !='' ">
                and i.RegisterIP = #{registerIp,jdbcType=VARCHAR}
            </if>
            <if test="lastStartTime !=null and lastStartTime !='' ">
                and m.lastlogintime &gt;=#{lastStartTime,jdbcType=TIMESTAMP}
            </if>
            <if test="lastEndTime !=null and lastEndTime != '' ">
                and m.lastlogintime &lt;=#{lastEndTime,jdbcType=TIMESTAMP}
            </if>
            <if test="lastLoginFrom != null and lastLoginFrom !='' ">
                and m.lastloginfrom = #{lastLoginFrom,jdbcType=VARCHAR}
            </if>
            <if test="agentName != null and agentName !='' ">
                and u.id = #{agentName,jdbcType=BIGINT}
            </if>
            <if test="brokerName != null and brokerName !='' ">
                and u1.id = #{brokerName,jdbcType=BIGINT}
            </if>
            <if test="attribution != null and attribution !='' ">
                and i.attribution = #{attribution,jdbcType=VARCHAR}
            </if>
        </where>
        order by i.RegisterTime DESC
    </select>
    <!--注册信息查询结束-->

   <update id="updateByIdSelective" parameterType="com.fx.xzt.sys.entity.UserLogin" >
    update User_Login
    <set >
      <if test="username != null" >
        UserName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        Password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        Status = #{status,jdbcType=SMALLINT},
      </if>
    </set>
    where UserID = #{userid,jdbcType=BIGINT}
  </update>
  
  	<!--获取用户账户开始-htt-->
    <select id="getByAccount" resultType="java.util.Map" parameterType="java.util.Map" >
    	SELECT l.UserID , l.UserName ,a.id id,a.rmb
        FROM User_Login l 
        LEFT JOIN user_account a ON l.UserID = a.user_id
        <where>
        	and l.Status = 1
            <if test="userName != null and userName != '' ">
                and l.UserName = #{userName,jdbcType=VARCHAR}
            </if>
        </where>
    </select>
    <!--获取用户账户结束-->

  <!-- <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    UserID, UserName, Password, Status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.fx.xzt.sys.entity.UserLoginExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_login
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user_login
    where UserID = #{userid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user_login
    where UserID = #{userid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.fx.xzt.sys.entity.UserLoginExample" >
    delete from user_login
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fx.xzt.sys.entity.UserLogin" >
    insert into user_login (UserID, UserName, Password, 
      Status)
    values (#{userid,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{status,jdbcType=SMALLINT})
  </insert>
  <insert id="insertSelective" parameterType="com.fx.xzt.sys.entity.UserLogin" >
    insert into user_login
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        UserID,
      </if>
      <if test="username != null" >
        UserName,
      </if>
      <if test="password != null" >
        Password,
      </if>
      <if test="status != null" >
        Status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fx.xzt.sys.entity.UserLoginExample" resultType="java.lang.Integer" >
    select count(*) from user_login
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user_login
    <set >
      <if test="record.userid != null" >
        UserID = #{record.userid,jdbcType=BIGINT},
      </if>
      <if test="record.username != null" >
        UserName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        Password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        Status = #{record.status,jdbcType=SMALLINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user_login
    set UserID = #{record.userid,jdbcType=BIGINT},
      UserName = #{record.username,jdbcType=VARCHAR},
      Password = #{record.password,jdbcType=VARCHAR},
      Status = #{record.status,jdbcType=SMALLINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fx.xzt.sys.entity.UserLogin" >
    update user_login
    <set >
      <if test="username != null" >
        UserName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        Password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        Status = #{status,jdbcType=SMALLINT},
      </if>
    </set>
    where UserID = #{userid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fx.xzt.sys.entity.UserLogin" >
    update user_login
    set UserName = #{username,jdbcType=VARCHAR},
      Password = #{password,jdbcType=VARCHAR},
      Status = #{status,jdbcType=SMALLINT}
    where UserID = #{userid,jdbcType=BIGINT}
  </update> -->
</mapper>