<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fx.xzt.sys.mapper.UserLoginMapper" >
  <resultMap id="BaseResultMap" type="com.fx.xzt.sys.entity.UserLogin" >
    <id column="UserID" property="userid" jdbcType="BIGINT" />
    <result column="UserName" property="username" jdbcType="VARCHAR" />
    <result column="Password" property="password" jdbcType="VARCHAR" />
    <result column="Status" property="status" jdbcType="SMALLINT" />
  </resultMap>
    <resultMap id="RegisterResultMap" type="com.fx.xzt.sys.model.UserLoginModel" >
        <result column="UserID" property="userid" jdbcType="BIGINT" />
        <result column="UserName" property="username" jdbcType="VARCHAR" />
        <result column="Status" property="status" jdbcType="SMALLINT" />
        <result column="RegisterTime" property="registerTime" jdbcType="TIMESTAMP" />
        <result column="RegisterFrom" property="registerFrom" jdbcType="VARCHAR" />
        <result column="RegisterIp" property="registerIp" jdbcType="VARCHAR" />
        <result column="attribution" property="attribution" jdbcType="VARCHAR" />
        <result column="lastlogintime" property="lastLoginTime"  jdbcType="TIMESTAMP" />
        <result column="lastloginfrom" property="lastLoginFrom" jdbcType="VARCHAR" />
        <result column="lastfromip" property="lastFromIp" jdbcType="VARCHAR" />
        <result column="agent_id" property="agentsId" jdbcType="BIGINT" />
        <result column="agent_name" property="agentsName" jdbcType="VARCHAR" />
        <result column="broker_id" property="brokerId" jdbcType="BIGINT" />
        <result column="broker_name" property="brokerName" jdbcType="VARCHAR" />
    </resultMap>
    
    <!-- 注册信息查询-归属地开始-htt -->
    <select id="getByAttributionPro" resultType="java.util.Map" >
        SELECT DISTINCT attribution_province province FROM User_Info
        order by attribution_province 
    </select>
    <!-- 注册信息查询-归属地结束-htt -->
    <!-- 根据userName获取用户的信息tianliya -->
    <select id="selectByUserName" parameterType="java.lang.String" resultMap="BaseResultMap" >
        SELECT UserID, UserName FROM User_Login where Status = 1 and UserName = #{userName,jdbcType=VARCHAR}
    </select>
    <!-- 注册信息查询-归属地结束-htt -->
    
    <!--注册信息查询开始-htt-->
    <select id="getByRegisterMessage" resultType="java.util.Map" parameterType="java.util.Map" >
        SELECT cast(l.UserID as CHAR) UserID , 
        <if test='isView == "1"'>
            l.UserName UserName,
        </if>
        <if test='isView != "1"'>
            INSERT(l.UserName, 4, 4, '****') UserName,
        </if>
        i.agent_id agentId, u.user_name agentName, 
        i.broker_id brokerId, u1.user_name brokerName ,
        l.Status ,i.RegisterTime, i.RegisterFrom, i.RegisterIp, i.attribution,
        m.lastlogintime, m.lastloginfrom, m.lastfromip, i.attribution_province attributionProvince 
        FROM User_Login l LEFT JOIN User_Info i ON l.UserID = i.UserID
        LEFT JOIN users u ON i.agent_id = u.id
        LEFT JOIN users u1 ON i.broker_id = u1.id
        LEFT JOIN (SELECT userid useridm,MAX(loginTime) lastlogintime,loginFrom lastloginfrom,
        fromIp lastfromip FROM User_LoginInfo GROUP BY  useridm) m
        ON l.UserID = m.useridm
        <where>
        	<!-- and l.Status = 1 -->
            <if test="userName != null and userName != '' ">
                and l.UserName like CONCAT('%',#{userName,jdbcType=VARCHAR})
            </if>
            <if test="startTime !=null and startTime !='' ">
                and i.RegisterTime &gt;=#{startTime,jdbcType=TIMESTAMP}
            </if>
            <if test="endTime !=null and endTime != '' ">
                and i.RegisterTime &lt;=#{endTime,jdbcType=TIMESTAMP}
            </if>
            <if test="registerFrom != null and registerFrom !='' ">
                and i.RegisterFrom = #{registerFrom,jdbcType=VARCHAR}
            </if>
            <if test="registerIp != null and registerIp !='' ">
                and i.RegisterIP like CONCAT(#{registerIp,jdbcType=VARCHAR},'%')
            </if>
            <if test="lastStartTime !=null and lastStartTime !='' ">
                and m.lastlogintime &gt;=#{lastStartTime,jdbcType=TIMESTAMP}
            </if>
            <if test="lastEndTime !=null and lastEndTime != '' ">
                and m.lastlogintime &lt;=#{lastEndTime,jdbcType=TIMESTAMP}
            </if>
            <if test="lastLoginFrom != null and lastLoginFrom !='' ">
                and m.lastloginfrom = #{lastLoginFrom,jdbcType=VARCHAR}
            </if>
            <if test="agentName != null and agentName !='' ">
                and u.id = #{agentName,jdbcType=BIGINT}
            </if>
            <if test="brokerName != null and brokerName !='' ">
                and u1.id = #{brokerName,jdbcType=BIGINT}
            </if>
            <if test="attributionProvince != null and attributionProvince !='' ">
                and i.attribution_province = #{attributionProvince,jdbcType=VARCHAR}
            </if>
        </where>
        order by i.RegisterTime DESC
    </select>
    <!--注册信息查询结束-->

   <update id="updateByIdSelective" parameterType="com.fx.xzt.sys.entity.UserLogin" >
    update User_Login
    <set >
      <if test="username != null" >
        UserName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        Password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        Status = #{status,jdbcType=SMALLINT},
      </if>
    </set>
    where UserID = #{userid,jdbcType=BIGINT}
  </update>
  
  	<!--获取用户账户开始-htt-->
    <select id="getByAccount" resultType="java.util.Map" parameterType="java.util.Map" >
    	SELECT cast(l.UserID as CHAR) UserID , l.UserName ,cast(a.id as CHAR) id,a.rmb
        FROM User_Login l 
        LEFT JOIN user_account a ON l.UserID = a.user_id
        <where>
        	and l.Status = 1
            <if test="userName != null and userName != '' ">
                and l.UserName = #{userName,jdbcType=VARCHAR}
            </if>
        </where>
    </select>
    <!--获取用户账户结束-->

</mapper>